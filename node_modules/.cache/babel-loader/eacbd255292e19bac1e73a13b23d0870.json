{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/metrics/BlockRewardChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/metrics/BlockRewardChart.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BlockRewardChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"block-reward-chart\"\n    v-loading=\"loading\"\n    element-loading-background=\"var(--board-bg-color)\"\n  >\n    <time-selector @time-select=\"handleTimeChange\">\n      <span slot=\"left\" class=\"title\">{{\n        $t(\"stats.metrics.blockReward.title\")\n      }}</span>\n    </time-selector>\n    <div class=\"chart-con\" ref=\"chart\"></div>\n  </div>\n</template>\n<script>\nimport dayjs from \"dayjs\";\nimport { getCumulativeBlock } from \"@/api/token\";\nlet chart;\nexport default {\n  name: \"BlockRewardChart\",\n  data() {\n    return {\n      loading: false,\n      selector: {\n        time_diff: 3600,\n        repeate_time: 24,\n        format: \"MMM Do HH:mm\"\n      },\n      rewardList: [],\n      countList: []\n    };\n  },\n  methods: {\n    drawChart() {\n      const rate = this.rate;\n      const numberConversion = this.numberConversion;\n      const { splitLine, seriesItem } = this.chartTheme.blockReward;\n      const [miner, reward] = this.$t(\"chart.blockReward\");\n      const { rewardList, countList } = this;\n      const xData = rewardList.map(item => {\n        return dayjs.unix(item.name).format(this.selector.format);\n      });\n      const color = this.theme === \"light\" ? \"black\" : \"white\";\n      const option = {\n        tooltip: {\n          trigger: \"axis\"\n        },\n        grid: {\n          left: 50 * rate,\n          right: 50 * rate\n        },\n        legend: {\n          left: 30 * rate,\n          selectedMode: false,\n          data: [\n            {\n              name: miner,\n              icon: \"circle\"\n            },\n            {\n              name: reward,\n              icon: \"circle\"\n            }\n          ],\n          textStyle: {\n            fontSize: 12 * rate,\n            color\n          }\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: true,\n          data: xData,\n          axisLabel: {\n            textStyle: {\n              fontSize: 12 * rate,\n              color\n            },\n            margin: 20\n          }\n        },\n        yAxis: [\n          {\n            type: \"value\",\n            splitLine: {\n              lineStyle: {\n                type: \"dashed\",\n                color: splitLine\n              }\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              formatter(v) {\n                return numberConversion(v);\n              },\n              textStyle: {\n                fontSize: 12 * rate,\n                color\n              }\n            }\n          },\n          {\n            type: \"value\",\n            splitLine: {\n              lineStyle: {\n                type: \"dashed\",\n                color: splitLine\n              }\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              textStyle: {\n                fontSize: 12 * rate,\n                color\n              }\n            }\n          }\n        ],\n        series: [\n          {\n            name: miner,\n            type: \"bar\",\n            yAxisIndex: 1,\n            itemStyle: {\n              color: seriesItem[0]\n            },\n            data: countList\n          },\n          {\n            name: reward,\n            type: \"line\",\n            itemStyle: {\n              color: seriesItem[1]\n            },\n            symbol: \"none\",\n            smooth: true,\n            data: rewardList\n          }\n        ]\n      };\n      chart.setOption(option);\n    },\n    handleTimeChange(v) {\n      this.selector = v;\n    },\n    async getCumulativeBlock() {\n      try {\n        this.loading = true;\n        const { time_diff, repeate_time, time_start } = this.selector;\n        let res = await getCumulativeBlock({\n          time_start: time_start == undefined ? this.now - 86400 : time_start,\n          time_diff: time_diff,\n          repeate: repeate_time\n        });\n        this.loading = false;\n        const rewardList = [];\n        const countList = [];\n        res.forEach(item => {\n          let now = dayjs(dayjs().format(\"YYYY MM DD HH:mm\")).unix();\n          if (now >= item.time_end) {\n            rewardList.push({\n              name: item.time_end,\n              value: item.blocks_reward\n            });\n            countList.push(parseInt(item.miner_count));\n          }\n        });\n        this.rewardList = Object.freeze(rewardList);\n        this.countList = Object.freeze(countList);\n        this.drawChart();\n      } catch (e) {\n        this.loading = false;\n      }\n    }\n  },\n  mounted() {\n    chart = this.$chart.init(this.$refs.chart);\n    this.getCumulativeBlock();\n  },\n  watch: {\n    selector() {\n      this.getCumulativeBlock();\n    },\n    theme() {\n      this.drawChart();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.block-reward-chart {\n  background: var(--board-bg-color);\n  border-radius: 8px;\n  box-shadow: 0px 1px 7px 9px rgba(0, 0, 0, 0.03);\n  .title {\n    font-size: 20px;\n    color: var(--main-text-color);\n  }\n  .chart-con {\n    height: 400px;\n  }\n  @media (max-width: 768px) {\n    .chart-con {\n      height: 200px;\n    }\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/stats/components/metrics"}]}