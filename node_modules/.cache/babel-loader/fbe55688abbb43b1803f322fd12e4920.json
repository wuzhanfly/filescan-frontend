{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/mining/MinerList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/mining/MinerList.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MinerList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,SAAA,WAAA,IAAA,YAAA,EAAA,YAAA,QAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,OADA;AAEA,QAAA,MAAA,EAAA,IAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,MAAA,EAAA,gBAJA;AAKA,QAAA,QAAA,EAAA;AALA,OADA,EAQA;AACA,QAAA,GAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA,IAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,MAAA,EAAA,YAJA;AAKA,QAAA,QAAA,EAAA;AALA,OARA,EAeA;AACA,QAAA,GAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAfA,EAmBA;AACA,QAAA,GAAA,EAAA;AADA,OAnBA,EAsBA;AACA,QAAA,GAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAtBA,EA0BA;AACA,QAAA,GAAA,EAAA;AADA,OA1BA,CAFA;AAgCA,MAAA,MAAA,EAAA,CAhCA;AAiCA,MAAA,KAAA,EAAA,EAjCA;AAkCA,MAAA,KAAA,EAAA,CAlCA;AAmCA,MAAA,OAAA,EAAA,KAnCA;AAoCA,MAAA,aAAA,EAAA,KApCA;AAqCA,MAAA,OAAA,EAAA,OArCA;AAsCA,MAAA,QAAA,EAAA,CAAA,CAtCA;AAuCA,MAAA,GAAA,EAAA,EAvCA;AAwCA,MAAA,KAAA,EAAA,IAxCA;AAyCA,MAAA,WAAA,EAAA;AAzCA,KAAA;AA2CA,GA9CA;AA+CA,EAAA,OA/CA,qBA+CA;AACA,SAAA,KAAA,GAAA,CAAA;AACA,SAAA,cAAA,CAAA,CAAA;AACA,GAlDA;AAmDA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,CADA,EACA;AACA,WAAA,KAAA,GAAA,CAAA;AACA,KAHA;AAIA,IAAA,gBAJA,4BAIA,CAJA,EAIA;AACA,WAAA,MAAA,GAAA,CAAA,CAAA,GAAA,CAAA,IAAA,KAAA,KAAA;AACA,KANA;AAOA,IAAA,cAPA,0BAOA,UAPA,EAOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,gBAAA,SAHA,GAGA,KAAA,CAAA,EAAA,CAAA,+BAAA,CAHA;;AAKA,oBAAA,UAAA,IAAA,SAAA,EAAA;AACA,kBAAA,UAAA,GAAA,KAAA,CAAA,GAAA,GAAA,KAAA;AACA;;AACA,gBAAA,KARA,GAQA;AACA,kBAAA,QAAA,EAAA,KAAA,CAAA,GADA;AAEA,kBAAA,UAAA,EAAA,UAFA;AAGA,kBAAA,MAAA,EAAA,KAAA,CAAA,MAHA;AAIA,kBAAA,KAAA,EAAA,KAAA,CAAA,KAJA;AAKA,kBAAA,IAAA,EAAA,KAAA,CAAA,OALA;AAMA,kBAAA,SAAA,EAAA,KAAA,CAAA;AANA,iBARA;AAAA;AAAA,uBAgBA,YAAA,CAAA,KAAA,CAhBA;;AAAA;AAgBA,gBAAA,GAhBA;AAiBA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,gBAAA,KAAA,CAAA,KAAA,GAAA,MAAA,CAAA,GAAA,CAAA,WAAA,CAAA;AACA,gBAAA,UAnBA,GAmBA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AAAA,sBAEA,eAFA,GAQA,IARA,CAEA,eAFA;AAAA,sBAGA,eAHA,GAQA,IARA,CAGA,eAHA;AAAA,sBAIA,aAJA,GAQA,IARA,CAIA,aAJA;AAAA,sBAKA,aALA,GAQA,IARA,CAKA,aALA;AAAA,sBAMA,OANA,GAQA,IARA,CAMA,OANA;AAAA,sBAOA,KAPA,GAQA,IARA,CAOA,KAPA;AASA,yBAAA;AACA,oBAAA,KAAA,EAAA,KADA;AAEA,oBAAA,GAAA,EAAA,OAFA;AAGA,oBAAA,KAAA,EAAA,KAAA,CAAA,cAAA,CAAA,eAAA,CAHA;AAIA,oBAAA,KAAA,EAAA,eAAA,IAAA,EAJA;AAKA,oBAAA,KAAA,EAAA,aALA;AAMA,oBAAA,KAAA,EAAA,aANA;AAOA,oBAAA,KAAA,EAAA,KAPA;AAQA,oBAAA,QAAA,EAAA,CACA;AACA,sBAAA,KAAA,EAAA;AADA,qBADA,EAIA;AAAA,sBAAA,KAAA,EAAA;AAAA,qBAJA,EAKA;AAAA,sBAAA,KAAA,EAAA;AAAA,qBALA,CARA;AAeA,oBAAA,SAAA,EAAA;AAfA,mBAAA;AAiBA,iBA1BA,CAnBA;AA8CA,gBAAA,KAAA,CAAA,UAAA,GAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AA9CA;AAAA;;AAAA;AAAA;AAAA;AAgDA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AAhDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDA,KAzDA;AA0DA,IAAA,WA1DA,yBA0DA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,SAFA,GAEA,MAAA,CAAA,EAAA,CAAA,+BAAA,CAFA;AAGA,gBAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AAHA;AAAA,uBAIA,YAAA,CAAA;AACA,kBAAA,KAAA,EAAA,MAAA,CAAA;AADA,iBAAA,CAJA;;AAAA;AAIA,gBAAA,GAJA;AAOA,gBAAA,MAAA,CAAA,aAAA,GAAA,KAAA;;AAPA,oBAQA,GAAA,CAAA,MARA;AAAA;AAAA;AAAA;;AASA,gBAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,MAAA,CAAA,KAAA,GAAA,CAAA;AAVA;;AAAA;AAaA,gBAAA,MAAA,CAAA,UAAA,GAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AAAA,sBAEA,eAFA,GAQA,IARA,CAEA,eAFA;AAAA,sBAGA,eAHA,GAQA,IARA,CAGA,eAHA;AAAA,sBAIA,aAJA,GAQA,IARA,CAIA,aAJA;AAAA,sBAKA,aALA,GAQA,IARA,CAKA,aALA;AAAA,sBAMA,OANA,GAQA,IARA,CAMA,OANA;AAAA,sBAOA,KAPA,GAQA,IARA,CAOA,KAPA;AASA,yBAAA;AACA,oBAAA,KAAA,EAAA,KADA;AAEA,oBAAA,GAAA,EAAA,OAFA;AAGA,oBAAA,KAAA,EAAA,MAAA,CAAA,cAAA,CAAA,eAAA,CAHA;AAIA,oBAAA,KAAA,EAAA,eAAA,IAAA,EAJA;AAKA,oBAAA,KAAA,EAAA,aALA;AAMA,oBAAA,KAAA,EAAA,aANA;AAOA,oBAAA,QAAA,EAAA,CACA;AACA,sBAAA,KAAA,EAAA;AADA,qBADA,EAIA;AAAA,sBAAA,KAAA,EAAA;AAAA,qBAJA,EAKA;AAAA,sBAAA,KAAA,EAAA;AAAA,qBALA,CAPA;AAcA,oBAAA,SAAA,EAAA;AAdA,mBAAA;AAgBA,iBAzBA,CAAA;AA0BA,gBAAA,MAAA,CAAA,KAAA,GAAA,CAAA;AAvCA;AAAA;;AAAA;AAAA;AAAA;AAyCA,gBAAA,MAAA,CAAA,aAAA,GAAA,KAAA;;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA,KArGA;AAsGA,IAAA,gBAtGA,4BAsGA,CAtGA,EAsGA;AACA,WAAA,MAAA,GAAA,CAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,CAAA,CAAA,UAAA;AACA,KA1GA;AA2GA,IAAA,YA3GA,wBA2GA,CA3GA,EA2GA;AACA;AACA,WAAA,GAAA,GAAA,KAAA,GAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,EAAA,CAAA;;AACA,UAAA,CAAA,CAAA,IAAA,KAAA,OAAA,IAAA,CAAA,CAAA,OAAA,KAAA,EAAA,IAAA,CAAA,KAAA,GAAA,EAAA;AACA;AACA;;AACA,WAAA,WAAA;AACA,KAlHA;AAmHA,IAAA,WAnHA,yBAmHA;AACA,WAAA,cAAA;AACA,KArHA;AAsHA,IAAA,gBAtHA,4BAsHA,CAtHA,EAsHA;AAAA,UACA,IADA,GACA,CADA,CACA,IADA;AAAA,UACA,KADA,GACA,CADA,CACA,KADA;AAEA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,KAAA,KAAA,YAAA,GAAA,CAAA,CAAA,GAAA,CAAA;AACA;AA1HA,GAnDA;AA+KA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,cAAA,CAAA,KAAA,KAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,WAAA,cAAA,CAAA,KAAA,KAAA;AACA,KANA;AAOA,IAAA,KAPA,iBAOA,CAPA,EAOA;AACA,WAAA,cAAA,CAAA,CAAA;AACA,KATA;AAUA,IAAA,OAVA,qBAUA;AACA,WAAA,cAAA,CAAA,KAAA,KAAA;AACA,KAZA;AAaA,IAAA,QAbA,sBAaA;AACA,WAAA,cAAA,CAAA,KAAA,KAAA;AACA;AAfA;AA/KA,CAAA","sourcesContent":["<template>\n  <div class=\"miner-list\">\n    <div class=\"title bottom-10\">{{ $t(\"stats.mining.minerList.title\") }}</div>\n    <time-selector\n      @time-select=\"handleTimeChange\"\n      :activeIndex.sync=\"activeIndex\"\n    >\n      <el-input\n        :placeholder=\"$t('stats.mining.minerList.placeholder')\"\n        slot=\"left\"\n        @keyup.native=\"handleSearch\"\n        v-model=\"key\"\n        clearable\n        :suffix-icon=\"searchLoading ? 'el-icon-loading' : ''\"\n        @clear=\"handleClear\"\n        :class=\"['search', theme === 'light' ? 'light' : 'dark']\"\n      >\n        <el-button\n          slot=\"append\"\n          icon=\"el-icon-search\"\n          @click.native=\"handleSearch\"\n        ></el-button>\n      </el-input>\n    </time-selector>\n    <base-table\n      :dataSource=\"dataSource\"\n      :columns=\"columns\"\n      :labels=\"$t('stats.mining.minerList.label')\"\n      :expand=\"!isMobile\"\n      :total=\"total\"\n      :showLoading=\"loading\"\n      showPagination\n      @size-change=\"handleSizeChange\"\n      @page-change=\"handlePageChange\"\n      @sort-change=\"handleSortChange\"\n      :defaultSort=\"{ prop: 'block', order: 'descending' }\"\n    ></base-table>\n  </div>\n</template>\n<script>\nimport { searchMiner, getMinerList } from \"@/api/stats\";\nexport default {\n  name: \"MinerList\",\n  data() {\n    return {\n      dataSource: [],\n      columns: [\n        {\n          key: \"miner\",\n          isLink: true,\n          ellipsis: true,\n          target: \"address/detail\",\n          paramKey: \"address\"\n        },\n        {\n          key: \"pid\",\n          isLink: true,\n          ellipsis: true,\n          target: \"stats/peer\",\n          paramKey: \"peer_id\"\n        },\n        {\n          key: \"power\",\n          sortable: true\n        },\n        {\n          key: \"prate\"\n        },\n        {\n          key: \"block\",\n          sortable: true\n        },\n        {\n          key: \"brate\"\n        }\n      ],\n      offset: 0,\n      limit: 25,\n      total: 0,\n      loading: false,\n      searchLoading: false,\n      sortKey: \"block\",\n      sortType: -1,\n      key: \"\",\n      start: null,\n      activeIndex: 4\n    };\n  },\n  mounted() {\n    this.start = 0;\n    this.getSortedMiner(0);\n  },\n  methods: {\n    handleSizeChange(v) {\n      this.limit = v;\n    },\n    handlePageChange(v) {\n      this.offset = (v - 1) * this.limit;\n    },\n    async getSortedMiner(time_start) {\n      try {\n        this.loading = true;\n        const dataLabel = this.$t(\"stats.mining.minerList.detail\");\n        let res;\n        if (time_start == undefined) {\n          time_start = this.now - 86400;\n        }\n        let param = {\n          time_end: this.now,\n          time_start,\n          offset: this.offset,\n          limit: this.limit,\n          sort: this.sortKey,\n          sort_type: this.sortType\n        };\n        res = await getMinerList(param);\n        this.loading = false;\n        this.total = Number(res.mienr_count);\n        const dataSource = res.miners.map((item, index) => {\n          const {\n            increased_power,\n            increased_block,\n            power_percent,\n            block_percent,\n            peer_id,\n            miner\n          } = item;\n          return {\n            miner,\n            pid: peer_id,\n            power: this.unitConversion(increased_power),\n            block: increased_block || \"\",\n            brate: block_percent,\n            prate: power_percent,\n            index,\n            dataList: [\n              {\n                value: peer_id\n              },\n              { value: \"\" },\n              { value: \"\" }\n            ],\n            dataLabel: dataLabel\n          };\n        });\n        this.dataSource = Object.freeze(dataSource);\n      } catch (e) {\n        this.loading = false;\n      }\n    },\n    async searchMiner() {\n      try {\n        const dataLabel = this.$t(\"stats.mining.minerList.detail\");\n        this.searchLoading = true;\n        let res = await searchMiner({\n          miner: this.key\n        });\n        this.searchLoading = false;\n        if (!res.miners) {\n          this.dataSource = [];\n          this.total = 0;\n          return;\n        }\n        this.dataSource = res.miners.map(item => {\n          const {\n            increased_power,\n            increased_block,\n            power_percent,\n            block_percent,\n            peer_id,\n            miner\n          } = item;\n          return {\n            miner,\n            pid: peer_id,\n            power: this.unitConversion(increased_power),\n            block: increased_block || \"\",\n            brate: block_percent,\n            prate: power_percent,\n            dataList: [\n              {\n                value: peer_id\n              },\n              { value: \"\" },\n              { value: \"\" }\n            ],\n            dataLabel: dataLabel\n          };\n        });\n        this.total = 1;\n      } catch (e) {\n        this.searchLoading = false;\n      }\n    },\n    handleTimeChange(v) {\n      this.offset = 0;\n      this.limit = 25;\n      this.start = v.time_start;\n    },\n    handleSearch(e) {\n      /* eslint-disable */\n      this.key = this.key.replace(/[^\b0-9a-zA-Z]/g, \"\");\n      if ((e.type === \"keyup\" && e.keyCode !== 13) || !this.key) {\n        return;\n      }\n      this.searchMiner();\n    },\n    handleClear() {\n      this.getSortedMiner();\n    },\n    handleSortChange(p) {\n      const { prop, order } = p;\n      this.sortKey = prop;\n      this.sortType = order === \"descending\" ? -1 : 1;\n    }\n  },\n  watch: {\n    offset() {\n      this.getSortedMiner(this.start);\n    },\n    limit() {\n      this.getSortedMiner(this.start);\n    },\n    start(v) {\n      this.getSortedMiner(v);\n    },\n    sortKey() {\n      this.getSortedMiner(this.start);\n    },\n    sortType() {\n      this.getSortedMiner(this.start);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.miner-list {\n  background: var(--board-bg-color);\n  .title {\n    padding-left: 30px;\n    font-weight: bold;\n    padding-top: 20px;\n    font-size: 20px;\n    color: var(--main-text-color);\n  }\n  & ::v-deep .el-input.search {\n    width: 400px;\n    input {\n      background: var(--board-bg-color);\n      color: var(--main-text-color);\n    }\n    .el-input-group__append {\n      background: var(--board-bg-color) !important;\n      color: var(--main-text-color) !important;\n    }\n    &.dark input {\n      background: var(--main-bg-color);\n      border-color: transparent;\n      border-right-color: var(--board-bg-color)\n\n    }\n    &.dark .el-input-group__append {\n      background: var(--main-bg-color) !important;\n      border-color: transparent;\n    }\n  }\n  @media (max-width: 768px) {\n    & ::v-deep .el-table {\n      .cell {\n        height: 20px !important;\n        line-height: 20px !important;\n        font-size: 12px;\n      }\n      .el-table__expand-icon i {\n        font-size: 12px;\n        line-height: 20px !important;\n      }\n    }\n    & ::v-deep .el-input.search input {\n      font-size: 12px;\n      height: 20px;\n      width: 45vw;\n      border-radius: 4px;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/stats/components/mining"}]}