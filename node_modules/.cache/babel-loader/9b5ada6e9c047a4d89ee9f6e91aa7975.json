{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/components/MessageList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/components/MessageList.vue","mtime":1613726343780},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MessageList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,SACA,UAAA,IAAA,WADA,EAEA,mBAFA,EAGA,iBAAA,IAAA,kBAHA,QAIA,eAJA;AAKA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,QAAA,IAAA,GAAA,KAAA,IAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,MAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,GAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAHA;AAQA,MAAA,WAAA,EAAA,CARA;AASA,MAAA,KAAA,EAAA,CATA;AAUA,MAAA,WAAA,EAAA,EAVA;AAWA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,MADA;AAEA,QAAA,YAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,GAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,gBAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OALA,EAWA;AACA,QAAA,GAAA,EAAA,QADA;AAEA,QAAA,MAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,QAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OAXA,EAiBA;AACA,QAAA,GAAA,EAAA,MADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAjBA,EAqBA;AACA,QAAA,GAAA,EAAA,MADA;AAEA,QAAA,MAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,gBAHA;AAIA,QAAA,QAAA,EAAA,SAJA;AAKA,QAAA,QAAA,EAAA,IALA;AAMA,QAAA,WAAA,EAAA,IAAA,KAAA;AANA,OArBA,EA6BA;AACA,QAAA,GAAA,EAAA,IADA;AAEA,QAAA,MAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,gBAHA;AAIA,QAAA,QAAA,EAAA,SAJA;AAKA,QAAA,QAAA,EAAA,IALA;AAMA,QAAA,WAAA,EAAA,IAAA,KAAA;AANA,OA7BA,EAqCA;AACA,QAAA,GAAA,EAAA;AADA,OArCA,EAwCA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,GAAA,EAAA,MADA;AAEA,QAAA,YAAA,EAAA;AAFA,OA7CA,EAiDA;AACA,QAAA,GAAA,EAAA;AADA,OAjDA,CAXA;AAgEA,MAAA,MAAA,EAAA;AAhEA,KAAA;AAkEA,GAtEA;AAuEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAbA,GAvEA;AAyFA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,CADA,EACA;AACA,WAAA,MAAA,CAAA,KAAA,GAAA,CAAA;AACA,KAHA;AAIA,IAAA,gBAJA,4BAIA,CAJA,EAIA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,WAAA,MAAA,CAAA,QAAA,GAAA,CAAA,CAAA,GAAA,CAAA,IAAA,KAAA,MAAA,CAAA,KAAA;AACA,KAPA;AAQA,IAAA,kBARA,8BAQA,CARA,EAQA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,WAAA,MAAA,GAAA;AACA,QAAA,MAAA,EAAA,CADA;AAEA,QAAA,QAAA,EAAA,CAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA;AAKA,KAfA;AAgBA,IAAA,UAhBA,wBAgBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,gBAAA,WAHA,GAGA,KAAA,CAAA,OAHA;AAIA,gBAAA,IAJA,GAIA,KAAA,CAAA,IAJA;AAKA,gBAAA,gBALA,GAKA,KAAA,CAAA,gBALA;;AAMA,oBAAA,KAAA,CAAA,GAAA,EAAA;AACA,kBAAA,KAAA,CAAA,MAAA,CAAA,SAAA,GAAA,KAAA,CAAA,GAAA;AACA;;AACA,gBAAA,IATA,GASA,EATA;;AAAA,sBAUA,KAAA,CAAA,IAAA,KAAA,OAVA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAWA,WAAA,CAAA,KAAA,CAAA,MAAA,CAXA;;AAAA;AAWA,gBAAA,IAXA;AAAA;AAAA;;AAAA;AAaA,gBAAA,KAAA,CAAA,OAAA;AAbA;AAAA,uBAcA,mBAAA,iCACA,KAAA,CAAA,MADA;AAEA,kBAAA,OAAA,EAAA,KAAA,CAAA,OAFA;AAGA,kBAAA,OAAA,EAAA;AAHA,mBAdA;;AAAA;AAcA,gBAAA,GAdA;AAmBA,gBAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA;AACA,gBAAA,IAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;;AApBA;AAsBA,gBAAA,KAAA,CAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA,gBAAA,WAvBA,GAuBA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AAAA,sBACA,GADA,GACA,IADA,CACA,GADA;AAAA,sBACA,SADA,GACA,IADA,CACA,SADA;AAAA,sBACA,GADA,GACA,IADA,CACA,GADA;AAAA,sBACA,MADA,GACA,IADA,CACA,MADA;AAAA,sBACA,WADA,GACA,IADA,CACA,WADA;AAAA,sBACA,SADA,GACA,IADA,CACA,SADA;AAAA,sBAEA,IAFA,GAEA,GAFA,CAEA,IAFA;AAAA,sBAEA,EAFA,GAEA,GAFA,CAEA,EAFA;AAAA,sBAEA,KAFA,GAEA,GAFA,CAEA,KAFA;AAAA,sBAEA,QAFA,GAEA,GAFA,CAEA,QAFA;AAGA,sBAAA,GAAA,GAAA;AACA,oBAAA,GAAA,EAAA,GADA;AAEA,oBAAA,IAAA,EAAA,KAAA,CAAA,UAAA,CAAA,SAAA,CAFA;AAGA,oBAAA,IAAA,EAAA;AACA,sBAAA,MADA,oBACA;AAAA;AACA,+BAAA,IAAA,KAAA,WAAA;AAAA;AAAA,yEAEA,IAFA;AAAA;AAAA,mCAGA;AAAA,4BAAA,KAAA,EAAA;AAAA;AAHA,4BAKA,gBAAA,CAAA,IAAA,EAAA,CAAA,EAAA,IAAA,CALA,gBAQA,gBAAA,CAAA,IAAA,EAAA,CAAA,EAAA,IAAA,CARA,EAAA;AAUA;AAZA,qBAHA;AAiBA,oBAAA,EAAA,EAAA;AACA,sBAAA,MADA,oBACA;AAAA;AACA,+BAAA,EAAA,KAAA,WAAA;AAAA;AAAA,yEAEA,EAFA;AAAA;AAAA,mCAGA;AAAA,4BAAA,KAAA,EAAA;AAAA;AAHA,4BAKA,gBAAA,CAAA,EAAA,EAAA,CAAA,EAAA,IAAA,CALA,gBAQA,gBAAA,CAAA,EAAA,EAAA,CAAA,EAAA,IAAA,CARA,EAAA;AAUA;AAZA,qBAjBA;AA+BA;AACA,oBAAA,KAAA,EAAA,KAhCA;AAkCA,oBAAA,GAAA,EAAA,QAlCA;AAmCA,oBAAA,IAAA,EAAA,KAAA,CAAA,OAAA,KAAA,IAAA,GAAA,IAAA,GAAA,KAnCA;AAoCA,oBAAA,MAAA,EAAA,WApCA;AAqCA,oBAAA,MAAA,EAAA,KAAA,CAAA,YAAA,CAAA,MAAA,CArCA;AAsCA,oBAAA,IAAA,EAAA;AAtCA,mBAAA;;AAwCA,sBAAA,IAAA,KAAA,OAAA,EAAA;AACA,oBAAA,GAAA,CAAA,IAAA,GAAA,IAAA;AACA,oBAAA,GAAA,CAAA,EAAA,GAAA,EAAA;AACA;;AACA,yBAAA,GAAA;AACA,iBAhDA,CAvBA;AAwEA,gBAAA,KAAA,CAAA,WAAA,GAAA,MAAA,CAAA,MAAA,CAAA,WAAA,CAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AAzEA;AAAA;;AAAA;AAAA;AAAA;AA2EA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AA3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6EA,KA7FA;AA8FA,IAAA,iBA9FA,+BA8FA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,kBAAA,EAFA;;AAAA;AAEA,gBAAA,IAFA;AAGA,gBAAA,MAAA,CAAA,MAAA,GAAA,IAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,yBAAA;AACA,oBAAA,KAAA,EAAA,IADA;AAEA,oBAAA,KAAA,EAAA;AAFA,mBAAA;AAIA,iBALA,CAAA;AAHA;AAAA;;AAAA;AAAA;AAAA;AAUA,gBAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AA1GA,GAzFA;AAqMA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAFA,qBAEA;AACA,aAAA,UAAA;AACA;AAJA,KADA;AAOA,IAAA,GAPA,iBAOA;AACA,WAAA,MAAA,GAAA;AACA,QAAA,QAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA;AAIA,KAZA;AAaA,IAAA,OAbA,qBAaA;AACA,WAAA,UAAA;AACA;AAfA,GArMA;AAsNA,EAAA,OAtNA,qBAsNA;AACA,SAAA,MAAA,sBAAA,KAAA,EAAA,CAAA,yBAAA,CAAA;;AACA,QAAA,CAAA,KAAA,QAAA,EAAA;AACA,WAAA,OAAA,CAAA,KAAA;AACA,WAAA,MAAA,CAAA,KAAA;AACA;;AACA,SAAA,UAAA;AACA,SAAA,iBAAA;AACA,GA9NA;AA+NA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,aAAA,KAAA,OAAA,CACA,GADA,CACA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,+CACA,IADA;AAEA,UAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA;AAFA;AAIA,OANA,EAOA,MAPA,CAOA,UAAA,IAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,YAAA;AACA,OATA,CAAA;AAUA;AAZA;AA/NA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"message-list\"\n    v-loading=\"loading\"\n    element-loading-background=\"var(--board-bg-color)\"\n  >\n    <div class=\"total-number border-bottom\" slot=\"header\">\n      <span\n        v-html=\"$t('component.mesList.total', { total: formatNumber(total) })\"\n      ></span>\n      <el-select\n        v-model=\"option.method\"\n        @change=\"handleMethodChange\"\n        :placeholder=\"$t('component.mesList.placeholder')\"\n      >\n        <el-option label=\"All Method\" value=\"\" />\n        <el-option\n          v-for=\"item in method\"\n          :key=\"item.label\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        ></el-option>\n      </el-select>\n    </div>\n    <div class=\"table-con\" v-if=\"!isMobile\">\n      <base-table\n        :dataSource=\"messageData\"\n        :columns=\"columns\"\n        showPagination\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @page-change=\"handlePageChange\"\n        :labels=\"labels\"\n        :currentPage=\"currentPage\"\n      ></base-table>\n    </div>\n    <mb-board\n      v-for=\"(item, index) in messageData\"\n      :key=\"item.cid + index\"\n      :dataSource=\"item\"\n      :columns=\"mbColumns\"\n      v-else\n    />\n    <mb-page v-if=\"isMobile\" @page-change=\"handlePageChange\" :total=\"total\" />\n  </div>\n</template>\n<script>\nimport {\n  getMessage,\n  getMessageByAddress,\n  getMessageMethods\n} from \"@/api/message\";\nexport default {\n  name: \"MessageList\",\n  data() {\n    const type = this.type;\n    return {\n      method: [],\n      loading: false,\n      option: {\n        method: \"\",\n        begindex: \"0\",\n        count: \"25\"\n      },\n      currentPage: 1,\n      total: 0,\n      messageData: [],\n      columns: [\n        {\n          key: \"type\",\n          hideInMobile: true\n        },\n        {\n          key: \"cid\",\n          isLink: true,\n          target: \"message/detail\",\n          ellipsis: true\n        },\n        {\n          key: \"height\",\n          isLink: true,\n          target: \"tipset\",\n          paramKey: \"height\"\n        },\n        {\n          key: \"time\",\n          hideInMobile: true\n        },\n        {\n          key: \"from\",\n          isLink: true,\n          target: \"address/detail\",\n          paramKey: \"address\",\n          ellipsis: true,\n          isComponent: type === \"address\"\n        },\n        {\n          key: \"to\",\n          isLink: true,\n          target: \"address/detail\",\n          paramKey: \"address\",\n          ellipsis: true,\n          isComponent: type === \"address\"\n        },\n        {\n          key: \"value\"\n        },\n        // {\n        //   key: \"fee\",\n        //   hideInMobile: true,\n        //   unit: \"FIL\"\n        // },\n        {\n          key: \"code\",\n          hideInMobile: true\n        },\n        {\n          key: \"method\"\n        }\n      ],\n      labels: []\n    };\n  },\n  props: {\n    withType: {\n      type: Boolean,\n      default: true\n    },\n    cid: {\n      type: String,\n      default: \"\"\n    },\n    type: {\n      type: String,\n      default: \"block\"\n    },\n    address: {\n      type: String,\n      default: \"\"\n    }\n  },\n  methods: {\n    handleSizeChange(v) {\n      this.option.count = v;\n    },\n    handlePageChange(v) {\n      this.currentPage = v;\n      this.option.begindex = (v - 1) * this.option.count;\n    },\n    handleMethodChange(v) {\n      this.currentPage = 1;\n      this.option = {\n        method: v,\n        begindex: 0,\n        count: 25\n      };\n    },\n    async getMessage() {\n      try {\n        this.loading = true;\n        const addressHash = this.address;\n        const type = this.type;\n        const ellipsisByLength = this.ellipsisByLength;\n        if (this.cid) {\n          this.option.block_cid = this.cid;\n        }\n        let data = {};\n        if (this.type === \"block\") {\n          data = await getMessage(this.option);\n        } else {\n          this.columns;\n          const res = await getMessageByAddress({\n            ...this.option,\n            address: this.address,\n            from_to: \"\"\n          });\n          data.msgs = res.data;\n          data.total = res.total;\n        }\n        this.total = Number(data.total);\n        const messageData = data.msgs.map(item => {\n          const { cid, msgcreate, msg, height, method_name, exit_code } = item;\n          const { from, to, value, gasprice } = msg;\n          let res = {\n            cid: cid,\n            time: this.formatTime(msgcreate),\n            from: {\n              render() {\n                return from !== addressHash ? (\n                  <a\n                    href={`./#/address/detail?address=${from}`}\n                    style={{ color: \"var(--link-color)\" }}\n                  >\n                    {ellipsisByLength(from, 6, true)}\n                  </a>\n                ) : (\n                  <span>{ellipsisByLength(from, 6, true)}</span>\n                );\n              }\n            },\n            to: {\n              render() {\n                return to !== addressHash ? (\n                  <a\n                    href={`./#/address/detail?address=${to}`}\n                    style={{ color: \"var(--link-color)\" }}\n                  >\n                    {ellipsisByLength(to, 6, true)}\n                  </a>\n                ) : (\n                  <span>{ellipsisByLength(to, 6, true)}</span>\n                );\n              }\n            },\n            // value: this.formatFilNumber(value),\n            value,\n          \n            fee: gasprice,\n            type: this.address !== from ? \"in\" : \"out\",\n            method: method_name,\n            height: this.formatNumber(height),\n            code: exit_code\n          };\n          if (type === \"block\") {\n            res.from = from;\n            res.to = to;\n          }\n          return res;\n        });\n        this.messageData = Object.freeze(messageData);\n        this.loading = false;\n      } catch (e) {\n        this.loading = false;\n      }\n    },\n    async getMessageMethods() {\n      try {\n        let data = await getMessageMethods();\n        this.method = data.method.map(item => {\n          return {\n            value: item,\n            label: item\n          };\n        });\n      } catch (e) {\n        this.loading = false;\n      }\n    }\n  },\n  watch: {\n    option: {\n      deep: true,\n      handler() {\n        this.getMessage();\n      }\n    },\n    cid() {\n      this.option = {\n        begindex: 0,\n        count: 25\n      };\n    },\n    address() {\n      this.getMessage();\n    }\n  },\n  mounted() {\n    this.labels = [...this.$t(\"component.mesList.label\")];\n    if (!this.withType) {\n      this.columns.shift();\n      this.labels.shift();\n    }\n    this.getMessage();\n    this.getMessageMethods();\n  },\n  computed: {\n    mbColumns() {\n      return this.columns\n        .map((item, index) => {\n          return {\n            ...item,\n            title: this.labels[index]\n          };\n        })\n        .filter(item => {\n          return !item.hideInMobile;\n        });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.message-list {\n  .total-number {\n    height: 80px;\n    align-items: center;\n    padding: 0 100px;\n    display: flex;\n    background: var(--board-bg-color);\n    color: var(--main-text-color);\n    & ::v-deep > span {\n      margin-right: auto;\n      i {\n        color: var(--link-color);\n        font-size: 22px;\n      }\n    }\n    .el-dropdown-link {\n      color: white;\n    }\n  }\n  @media (max-width: 768px) {\n    .total-number {\n      height: 30px;\n      margin-bottom: 10px;\n      & ::v-deep .el-select input {\n        height: 20px;\n        font-size: 12px !important;\n        width: 100px;\n      }\n      & ::v-deep .el-input__suffix {\n        i {\n          line-height: 20px;\n          padding-left: 5px;\n          &.is-reverse {\n            padding-right: 10px;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@media (max-width: 768px) {\n  .el-select-dropdown {\n    z-index: 10000 !important;\n    .el-select-dropdown__wrap {\n      max-height: 160px !important;\n    }\n    li {\n      height: 20px !important;\n      line-height: 20px !important;\n      font-size: 12px;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}