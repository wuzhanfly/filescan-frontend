{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/home/components/table/BlockTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/home/components/table/BlockTable.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BlockTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"block-table\">\n    <base-table\n      :dataSource=\"blockTable.dataSource\"\n      :columns=\"blockTable.columns\"\n      :loadMore=\"true\"\n      @load=\"loadBlockData\"\n      :showLoading=\"blockTable.loading\"\n      :showAppend=\"blockTable.append && !isMobile\"\n      @click-append=\"goTo('tipset')\"\n      :span-map=\"blockTable.heightMap\"\n      :span=\"blockTable.span\"\n      :max-height=\"isMobile ? 200 : 400 * rate\"\n      :labels=\"$t('home.blockTable.label')\"\n      radius\n      :stripe=\"false\"\n    ></base-table>\n  </div>\n</template>\n<script>\nimport { getLatestBlock } from \"@/api/home\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"BlockTable\",\n  data() {\n    return {\n      blockTable: {\n        dataSource: [],\n        span: true,\n        columns: [\n          {\n            key: \"height\",\n            isLink: true,\n            target: \"tipset\"\n          },\n          {\n            key: \"hash\",\n            isLink: true,\n            target: \"tipset\",\n            ellipsis: true\n          },\n          {\n            key: \"time\"\n          },\n          {\n            key: \"miner\",\n            isLink: true,\n            target: \"address/detail\",\n            paramKey: \"address\"\n          },\n          {\n            key: \"reward\",\n            unit: \"FIL\"\n          }\n        ],\n        loadCount: 0,\n        loading: false,\n        append: false,\n        heightMap: {},\n        timer: null\n      }\n    };\n  },\n  methods: {\n    initBlockTimer() {\n      this.blockTable.timer = setInterval(() => {\n        this.blockTable.heightMap = {};\n        const heightMap = {};\n        this.blockTable.dataSource = this.blockTable.dataSource.map(\n          (item, index) => {\n            if (heightMap[item.height]) {\n              heightMap[item.height].span++;\n            } else {\n              heightMap[item.height] = {\n                span: 1,\n                index: index\n              };\n            } //表头合并\n            return {\n              ...item,\n              time: this.formatTime(item.originTime, item.current),\n              current: item.current + 1000\n            };\n          }\n        );\n        Object.values(heightMap).forEach(item => {\n          this.blockTable.heightMap[item.index] = item.span;\n        });\n      }, 1000);\n    },\n    async getBlockData(num) {\n      if (num > 30) {\n        return;\n      }\n      this.blockTable.heightMap = {};\n      this.blockTable.loading = true;\n      this.blockTable.span = false;\n      try {\n        const data = await getLatestBlock(num);\n        const heightMap = {};\n        const dataSource = data.block_header.map((item, index) => {\n          const { height, miner, timestamp } = item.block_header;\n          if (heightMap[height]) {\n            heightMap[height].span++;\n          } else {\n            heightMap[height] = {\n              span: 1,\n              index\n            };\n          } //表头合并\n          const current = new Date().getTime();\n          const realTime =\n            timestamp > current / 1000 ? current / 1000 : timestamp;\n          return {\n            height: this.formatNumber(height),\n            hash: item.cid,\n            time: this.formatTime(realTime),\n            originTime: realTime,\n            miner: miner,\n            reward: Number(item.reward).toFixed(5),\n            current: current\n          };\n        });\n        this.blockTable.dataSource = dataSource;\n        Object.values(heightMap).forEach(item => {\n          this.blockTable.heightMap[item.index] = item.span;\n        });\n        this.blockTable.loading = false;\n        this.blockTable.span = true;\n        return Promise.resolve();\n      } catch (e) {\n        this.blockTable.loading = false;\n      }\n    },\n    async loadBlockData() {\n      if (this.blockTable.loading) {\n        return;\n      }\n      if (this.blockTable.loadCount == 3) {\n        this.blockTable.append = true;\n        return;\n      } else {\n        clearInterval(this.blockTable.timer);\n        try {\n          this.blockTable.loading = true;\n          await this.getBlockData(10 * (this.blockTable.loadCount + 1));\n          this.blockTable.loadCount++;\n          this.blockTable.loading = false;\n          this.initBlockTimer();\n        } catch (e) {\n          this.blockTable.loading = false;\n        }\n      }\n    }\n  },\n  watch: {\n    async latestBlockHeight() {\n      if (this.loadCount === 1) {\n        return;\n      }\n      clearInterval(this.blockTable.timer);\n      await this.getBlockData(this.blockTable.loadCount * 10);\n      this.initBlockTimer();\n    }\n  },\n  beforeDestroy() {\n    clearInterval(this.blockTable.timer);\n  },\n  computed: {\n    ...mapState([\"rate\"])\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.block-miner-table {\n  display: flex;\n  & > div {\n    flex: 1;\n    max-width: 50%;\n    background: var(--main-bg-color);\n  }\n  & > div:first-child {\n    margin-right: 10px;\n  }\n  .table-title {\n    padding: 15px;\n    background: var(--main-bg-color);\n    border-bottom: 1px solid #ccc;\n    display: flex;\n    justify-content: space-between;\n    img {\n      width: 20px;\n      margin-right: 15px;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/home/components/table"}]}