{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/home/components/chart/BlockTimeChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/home/components/chart/BlockTimeChart.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5mcmVlemUuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS93dXpoYW5mbHkvZ2l0L2ZpbHNjYW4tZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXRCbG9ja1RpbWVEYXRhIGFzIF9nZXRCbG9ja1RpbWVEYXRhIH0gZnJvbSAiQC9hcGkvaG9tZSI7CmltcG9ydCBkYXlqcyBmcm9tICJkYXlqcyI7CnZhciBjaGFydDsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJCbG9ja1RpbWVDaGFydCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFMaXN0OiBbXSwKICAgICAgYXZnVGltZTogMCwKICAgICAgbWluOiAwLAogICAgICBtYXg6IDAsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBzaG91bGRSZXNwb25kVGhlbWVDaGFuZ2U6IHRydWUKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBkcmF3VGltZUNoYXJ0OiBmdW5jdGlvbiBkcmF3VGltZUNoYXJ0KCkgewogICAgICB2YXIgZGF0YSA9IHRoaXMuZGF0YUxpc3Q7CiAgICAgIHZhciBfdGhpcyRjaGFydFRoZW1lJGJsb2MgPSB0aGlzLmNoYXJ0VGhlbWUuYmxvY2tUaW1lLAogICAgICAgICAgYXhpc0xpbmUgPSBfdGhpcyRjaGFydFRoZW1lJGJsb2MuYXhpc0xpbmUsCiAgICAgICAgICBzZXJpZXNJdGVtID0gX3RoaXMkY2hhcnRUaGVtZSRibG9jLnNlcmllc0l0ZW0sCiAgICAgICAgICBzZXJpZXNNYXJrTGluZSA9IF90aGlzJGNoYXJ0VGhlbWUkYmxvYy5zZXJpZXNNYXJrTGluZTsKICAgICAgdmFyIHZtID0gdGhpczsKICAgICAgdmFyIG9wdGlvbiA9IHsKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihwKSB7CiAgICAgICAgICAgIHZhciBodG1sID0gdm0uJHQoImNoYXJ0LmJsb2NrVGltZSIsIHsKICAgICAgICAgICAgICB2YWx1ZTogcC52YWx1ZSwKICAgICAgICAgICAgICBuYW1lOiBwLm5hbWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybiBodG1sOwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogMCwKICAgICAgICAgIHRvcDogMCwKICAgICAgICAgIHJpZ2h0OiAwLAogICAgICAgICAgYm90dG9tOiAxMAogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogYXhpc0xpbmUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICB0eXBlOiAiYmFyIiwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBjb2xvcjogc2VyaWVzSXRlbQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgIG1hcmtMaW5lOiB7CiAgICAgICAgICAgIHNpbGVudDogdHJ1ZSwKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogc2VyaWVzTWFya0xpbmUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3ltYm9sOiAibm9uZSIsCiAgICAgICAgICAgIGRhdGE6IFt7CiAgICAgICAgICAgICAgdHlwZTogImF2ZXJhZ2UiCiAgICAgICAgICAgIH1dCiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgY2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9LAogICAgZ2V0QmxvY2tUaW1lRGF0YTogZnVuY3Rpb24gZ2V0QmxvY2tUaW1lRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlcywgZGF0YSwgbWluLCBtYXgsIGF2Z19ibG9ja3RpbWUsIGRhdGFMaXN0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0QmxvY2tUaW1lRGF0YShfdGhpcy50aW1lKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIGRhdGEgPSByZXMuZGF0YSwgbWluID0gcmVzLm1pbiwgbWF4ID0gcmVzLm1heCwgYXZnX2Jsb2NrdGltZSA9IHJlcy5hdmdfYmxvY2t0aW1lOwogICAgICAgICAgICAgICAgZGF0YUxpc3QgPSBkYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICB2YXIgZW5kID0gZGF5anMoaXRlbS50aW1lICogMTAwMCkuYWRkKDEsICJob3VyIikuZm9ybWF0KCJISDptbSIpOwogICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICIiLmNvbmNhdChfdGhpcy5mb3JtYXRUaW1lQnlTdHIoaXRlbS50aW1lICogMTAwMCwgIk1NTSBEbyBZWVlZIEhIOm1tIiksICItIikuY29uY2F0KGVuZCksCiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGl0ZW0uYmxvY2tfdGltZQogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhTGlzdCA9IE9iamVjdC5mcmVlemUoZGF0YUxpc3QpOwogICAgICAgICAgICAgICAgX3RoaXMuYXZnVGltZSA9IE1hdGguZmxvb3IoYXZnX2Jsb2NrdGltZSk7CiAgICAgICAgICAgICAgICBfdGhpcy5taW4gPSBtaW47CiAgICAgICAgICAgICAgICBfdGhpcy5tYXggPSBtYXg7CgogICAgICAgICAgICAgICAgX3RoaXMuZHJhd1RpbWVDaGFydCgpOwoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE1OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTVdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIHRpbWU6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBjaGFydCA9IHRoaXMuJGNoYXJ0LmluaXQodGhpcy4kcmVmcy50aW1lKTsKICAgIHRoaXMuZ2V0QmxvY2tUaW1lRGF0YSgpOwogIH0sCiAgd2F0Y2g6IHsKICAgIGxhdGVzdEJsb2NrSGVpZ2h0OiBmdW5jdGlvbiBsYXRlc3RCbG9ja0hlaWdodCgpIHsKICAgICAgewogICAgICAgIGlmICh0aGlzLmxvYWRDb3VudCA9PT0gMSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5nZXRCbG9ja1RpbWVEYXRhKCk7CiAgICAgIH0KICAgIH0sCiAgICB0aGVtZTogZnVuY3Rpb24gdGhlbWUoKSB7CiAgICAgIHRoaXMuZHJhd1RpbWVDaGFydCgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["BlockTimeChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"block-time-chart\"\n    v-loading=\"loading\"\n    element-loading-background=\"var(--board-bg-color)\"\n  >\n    <div class=\"chart-top\">\n      <div class=\"avg top-30\">\n        <div>\n          {{ $t(\"home.blockTime.label\") }}\n          <el-popover\n            placement=\"bottom-start\"\n            width=\"200\"\n            trigger=\"hover\"\n            :content=\"$t('home.blockTime.tips')\"\n          >\n            <i class=\"el-icon-warning-outline\" slot=\"reference\"></i>\n          </el-popover>\n        </div>\n        <div v-show=\"!loading\">{{ avgTime }} s</div>\n      </div>\n      <div class=\"chart-con\" ref=\"time\"></div>\n    </div>\n    <div class=\"min-max bottom-10\">\n      <div class=\"min\">\n        <span>{{ $t(\"home.blockTime.min\") }}</span>\n        <span>{{ min }} s</span>\n      </div>\n      <div class=\"max\">\n        <span>{{ $t(\"home.blockTime.max\") }}</span>\n        <span>{{ max }} s</span>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { getBlockTimeData } from \"@/api/home\";\nimport dayjs from \"dayjs\";\nlet chart;\nexport default {\n  name: \"BlockTimeChart\",\n  data() {\n    return {\n      dataList: [],\n      avgTime: 0,\n      min: 0,\n      max: 0,\n      loading: false,\n      shouldRespondThemeChange: true\n    };\n  },\n  methods: {\n    drawTimeChart() {\n      const data = this.dataList;\n      const {\n        axisLine,\n        seriesItem,\n        seriesMarkLine\n      } = this.chartTheme.blockTime;\n      const vm = this;\n      const option = {\n        tooltip: {\n          formatter: function(p) {\n            const html = vm.$t(\"chart.blockTime\", {\n              value: p.value,\n              name: p.name\n            });\n            return html;\n          }\n        },\n        grid: {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 10\n        },\n        xAxis: {\n          data: [],\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: axisLine\n            }\n          }\n        },\n        yAxis: {\n          show: false\n        },\n        series: [\n          {\n            type: \"bar\",\n            itemStyle: {\n              normal: {\n                color: seriesItem\n              }\n            },\n            data: data,\n            markLine: {\n              silent: true,\n              label: {\n                show: false\n              },\n              lineStyle: {\n                color: seriesMarkLine\n              },\n              symbol: \"none\",\n              data: [\n                {\n                  type: \"average\"\n                }\n              ]\n            }\n          }\n        ]\n      };\n      chart.setOption(option);\n    },\n    async getBlockTimeData() {\n      try {\n        this.loading = true;\n        const res = await getBlockTimeData(this.time);\n        this.loading = false;\n        const { data, min, max, avg_blocktime } = res;\n        const dataList = data.map(item => {\n          const end = dayjs(item.time * 1000)\n            .add(1, \"hour\")\n            .format(\"HH:mm\");\n          return {\n            name: `${this.formatTimeByStr(\n              item.time * 1000,\n              \"MMM Do YYYY HH:mm\"\n            )}-${end}`,\n            value: item.block_time\n          };\n        });\n        this.dataList = Object.freeze(dataList);\n        this.avgTime = Math.floor(avg_blocktime);\n        this.min = min;\n        this.max = max;\n        this.drawTimeChart();\n      } catch (e) {\n        this.loading = false;\n      }\n    }\n  },\n  props: {\n    time: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  mounted() {\n    chart = this.$chart.init(this.$refs.time);\n    this.getBlockTimeData();\n  },\n  watch: {\n    latestBlockHeight() {\n      {\n        if (this.loadCount === 1) {\n          return;\n        }\n        this.getBlockTimeData();\n      }\n    },\n    theme() {\n      this.drawTimeChart();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.block-time-chart {\n  .chart-top {\n    display: flex;\n  }\n  .avg {\n    min-width: 180px;\n    div:first-child {\n      font-weight: bold;\n      height: 30px;\n      color: var(--total-board-top-color);\n      &::before {\n        content: \"\";\n        display: inline-block;\n        width: 12px;\n        height: 12px;\n        background: #0091ff;\n        border-radius: 50%;\n        margin-right: 5px;\n      }\n    }\n    div:last-child {\n      color: #0091ff;\n      font-size: 26px;\n      margin-top: 5px;\n    }\n  }\n  .chart-con {\n    height: 100px;\n    flex: 1;\n  }\n  .min-max {\n    margin-left: 180px;\n    display: flex;\n    justify-content: space-between;\n    flex: 1;\n    .min,\n    .max {\n      font-size: 16px;\n      span:first-child {\n        color: var(--total-board-bottom-color);\n        margin-right: 10px;\n      }\n      span:last-child {\n        color: var(--main-text-color);\n      }\n    }\n    .max {\n      span:first-child {\n        color: #ff0044;\n      }\n    }\n  }\n  @media (max-width: 768px) {\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.03);\n    border-radius: 4px;\n    .avg {\n      flex: 2;\n      div:last-child {\n        margin-top: 15px !important;\n        font-size: 12px !important;\n      }\n      & div:first-child::before {\n        width: 6px;\n        height: 6px;\n      }\n    }\n    .chart-con {\n      flex: 3;\n    }\n    .min-max {\n      padding-left: 40%;\n      margin: 0;\n    }\n    .min,\n    .max {\n      font-size: 12px !important;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/home/components/chart"}]}