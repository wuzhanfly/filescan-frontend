{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/stats/PeerId.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/stats/PeerId.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvd3V6aGFuZmx5L2dpdC9maWxzY2FuLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvd3V6aGFuZmx5L2dpdC9maWxzY2FuLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0UGVlckJ5SWQgYXMgX2dldFBlZXJCeUlkIH0gZnJvbSAiQC9hcGkvc3RhdHMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBlZXJJZCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFMaXN0OiBbewogICAgICAgIGtleTogInBlZXJfaWQiLAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBmb250V2VpZ2h0OiAiYm9sZCIKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJtaW5lcl9hZGRyZXNzIiwKICAgICAgICBpc0xpbms6IHRydWUsCiAgICAgICAgdGFyZ2V0OiAiYWRkcmVzcy9kZXRhaWwiLAogICAgICAgIHBhcmFtS2V5OiAiYWRkcmVzcyIKICAgICAgfSwgewogICAgICAgIGtleTogImlwIgogICAgICB9LCB7CiAgICAgICAga2V5OiAibG9jYXRpb25fZW4iCiAgICAgIH1dCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UGVlckJ5SWQ6IGZ1bmN0aW9uIGdldFBlZXJCeUlkKHBlZXIpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF9nZXRQZWVyQnlJZCh7CiAgICAgICAgICAgICAgICAgIHBlZXJfaWQ6IHBlZXIKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMuZGF0YUxpc3QgPSBfdGhpcy5kYXRhTGlzdC5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgdmFyIGxpbmtMaXN0OwoKICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0ua2V5ID09PSAibWluZXJfYWRkcmVzcyIpIHsKICAgICAgICAgICAgICAgICAgICBsaW5rTGlzdCA9IFtyZXMucGVlcltpdGVtLmtleV1dOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGxpbmtMaXN0ID0gcmVzLnBlZXJbaXRlbS5rZXldOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBpdGVtKSwge30sIHsKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcmVzLnBlZXJbaXRlbS5rZXldLAogICAgICAgICAgICAgICAgICAgIGxpbmtMaXN0OiBsaW5rTGlzdAogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgIiRyb3V0ZS5xdWVyeS5wZWVyX2lkIjogewogICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIodikgewogICAgICAgIGlmICghdikgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmdldFBlZXJCeUlkKHYpOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["PeerId.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAUA,SAAA,WAAA,IAAA,YAAA,QAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,UAAA,EAAA;AADA;AAFA,OADA,EAOA;AACA,QAAA,GAAA,EAAA,eADA;AAEA,QAAA,MAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,gBAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OAPA,EAaA;AACA,QAAA,GAAA,EAAA;AADA,OAbA,EAgBA;AACA,QAAA,GAAA,EAAA;AADA,OAhBA;AADA,KAAA;AAsBA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,IADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,YAAA,CAAA;AACA,kBAAA,OAAA,EAAA;AADA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,GAFA;AAKA,gBAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,sBAAA,QAAA;;AACA,sBAAA,IAAA,CAAA,GAAA,KAAA,eAAA,EAAA;AACA,oBAAA,QAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;AACA,mBAFA,MAEA;AACA,oBAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA;;AACA,yDACA,IADA;AAEA,oBAAA,KAAA,EAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAFA;AAGA,oBAAA,QAAA,EAAA;AAHA;AAKA,iBAZA,CAAA;AALA;AAAA;;AAAA;AAAA;AAAA;AAmBA,gBAAA,OAAA,CAAA,GAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAtBA,GA1BA;AAkDA,EAAA,KAAA,EAAA;AACA,4BAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,mBAEA,CAFA,EAEA;AACA,YAAA,CAAA,CAAA,EAAA;AACA;AACA,SAFA,MAEA;AACA,eAAA,WAAA,CAAA,CAAA;AACA;AACA;AARA;AADA;AAlDA,CAAA","sourcesContent":["<template>\n  <div class=\"peer-id bottom-10\">\n    <overview\n      :dataList=\"dataList\"\n      class=\"bottom-40\"\n      :dataLabel=\"$t('stats.peer.label')\"\n    />\n  </div>\n</template>\n<script>\nimport { getPeerById } from \"@/api/stats\";\nexport default {\n  name: \"PeerId\",\n  data() {\n    return {\n      dataList: [\n        {\n          key: \"peer_id\",\n          style: {\n            fontWeight: \"bold\"\n          }\n        },\n        {\n          key: \"miner_address\",\n          isLink: true,\n          target: \"address/detail\",\n          paramKey: \"address\"\n        },\n        {\n          key: \"ip\"\n        },\n        {\n          key: \"location_en\"\n        }\n      ]\n    };\n  },\n  methods: {\n    async getPeerById(peer) {\n      try {\n        let res = await getPeerById({\n          peer_id: peer\n        });\n        this.dataList = this.dataList.map(item => {\n          let linkList;\n          if (item.key === \"miner_address\") {\n            linkList = [res.peer[item.key]];\n          } else {\n            linkList = res.peer[item.key];\n          }\n          return {\n            ...item,\n            value: res.peer[item.key],\n            linkList\n          };\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  },\n  watch: {\n    \"$route.query.peer_id\": {\n      immediate: true,\n      handler(v) {\n        if (!v) {\n          return;\n        } else {\n          this.getPeerById(v);\n        }\n      }\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/stats"}]}