{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/wuzhanfly/git/filscan-frontend/src/api/message.js","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/api/message.js","mtime":1612684657984},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZmV0Y2ggfSBmcm9tICIuL2ZldGNoIjsKLyoKcGFyYW06ewogIGNvdW50IG51bWJlcgogIG1ldGhvZCA/IHN0cmluZwogIGJlZ2luZGV4IG51bWJlcgogIGJsb2NrX2NpZCA/IHN0cmluZwp9CiovCgpleHBvcnQgZnVuY3Rpb24gZ2V0TWVzc2FnZShkYXRhKSB7CiAgcmV0dXJuIGZldGNoKHsKICAgIHVybDogIm1lc3NhZ2VzL0Jsb2NrTWVzc2FnZXMiLAogICAgbWV0aG9kOiAicG9zdCIsCiAgICBkYXRhOiBkYXRhCiAgfSk7Cn0KLyoKcGFyYW06ewogIGNpZHMgQXJyYXk8U3RyaW5nPgp9CiovCgpleHBvcnQgZnVuY3Rpb24gZ2V0TWVzc2FnZU1ldGhvZHMoKSB7CiAgcmV0dXJuIGZldGNoKHsKICAgIHVybDogIi9tZXNzYWdlcy9NZXNzYWdlc01ldGhvZHMiLAogICAgbWV0aG9kOiAicG9zdCIsCiAgICBkYXRhOiB7CiAgICAgIGNpZHM6IFtdCiAgICB9CiAgfSk7Cn0KLyoKcGFyYW06ewogIG1zZ19jaWQgU3RyaW5nCn0KKi8KCmV4cG9ydCBmdW5jdGlvbiBnZXRNZXNzYWdlRGV0YWlsKGRhdGEpIHsKICByZXR1cm4gZmV0Y2goewogICAgdXJsOiAibWVzc2FnZXMvTWVzc2FnZURldGFpbHMiLAogICAgbWV0aG9kOiAicG9zdCIsCiAgICBkYXRhOiBkYXRhCiAgfSk7Cn0KLyoKcGFyYW06ewogIGFkZHJlc3MgU3RyaW5nCiAgYmVnaW5pbmRleCBudW1iZXIKICBjb3VudCBudW1iZXIKICBtZXRob2Qgc3RyaW5nCiAgZnJvbV90byBzdHJpbmcKfQoqLwoKZXhwb3J0IGZ1bmN0aW9uIGdldE1lc3NhZ2VCeUFkZHJlc3MoZGF0YSkgewogIHJldHVybiBmZXRjaCh7CiAgICB1cmw6ICJtZXNzYWdlcy9NZXNzYWdlQnlBZGRyZXNzIiwKICAgIG1ldGhvZDogInBvc3QiLAogICAgZGF0YTogZGF0YQogIH0pOwp9Ci8qCnBhcmFtOnsKICBjaWQgU3RyaW5nCn0KKi8KCmV4cG9ydCBmdW5jdGlvbiBnZXRCbG9ja0NvbmZpcm1Db3VudChkYXRhKSB7CiAgcmV0dXJuIGZldGNoKHsKICAgIHVybDogIi90aXBzZXQvQmxvY2tDb25maXJtQ291bnQiLAogICAgbWV0aG9kOiAicG9zdCIsCiAgICBkYXRhOiBkYXRhCiAgfSk7Cn0="},{"version":3,"sources":["/home/wuzhanfly/git/filscan-frontend/src/api/message.js"],"names":["fetch","getMessage","data","url","method","getMessageMethods","cids","getMessageDetail","getMessageByAddress","getBlockConfirmCount"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAOF,KAAK,CAAC;AACXG,IAAAA,GAAG,EAAE,wBADM;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXF,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAZ;AAKD;AACD;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,iBAAT,GAA6B;AAClC,SAAOL,KAAK,CAAC;AACXG,IAAAA,GAAG,EAAE,2BADM;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXF,IAAAA,IAAI,EAAE;AACJI,MAAAA,IAAI,EAAE;AADF;AAHK,GAAD,CAAZ;AAOD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,CAA0BL,IAA1B,EAAgC;AACrC,SAAOF,KAAK,CAAC;AACXG,IAAAA,GAAG,EAAE,yBADM;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXF,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAZ;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,mBAAT,CAA6BN,IAA7B,EAAmC;AACxC,SAAOF,KAAK,CAAC;AACXG,IAAAA,GAAG,EAAE,2BADM;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXF,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAZ;AAKD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,oBAAT,CAA8BP,IAA9B,EAAoC;AACzC,SAAOF,KAAK,CAAC;AACXG,IAAAA,GAAG,EAAE,2BADM;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXF,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAZ;AAKD","sourcesContent":["import { fetch } from \"./fetch\";\n/*\nparam:{\n  count number\n  method ? string\n  begindex number\n  block_cid ? string\n}\n*/\nexport function getMessage(data) {\n  return fetch({\n    url: \"messages/BlockMessages\",\n    method: \"post\",\n    data\n  });\n}\n/*\nparam:{\n  cids Array<String>\n}\n*/\nexport function getMessageMethods() {\n  return fetch({\n    url: \"/messages/MessagesMethods\",\n    method: \"post\",\n    data: {\n      cids: []\n    }\n  });\n}\n\n/*\nparam:{\n  msg_cid String\n}\n*/\nexport function getMessageDetail(data) {\n  return fetch({\n    url: \"messages/MessageDetails\",\n    method: \"post\",\n    data\n  });\n}\n\n/*\nparam:{\n  address String\n  beginindex number\n  count number\n  method string\n  from_to string\n}\n*/\nexport function getMessageByAddress(data) {\n  return fetch({\n    url: \"messages/MessageByAddress\",\n    method: \"post\",\n    data\n  });\n}\n\n/*\nparam:{\n  cid String\n}\n*/\nexport function getBlockConfirmCount(data) {\n  return fetch({\n    url: \"/tipset/BlockConfirmCount\",\n    method: \"post\",\n    data\n  });\n}\n"]}]}