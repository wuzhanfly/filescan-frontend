{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/components/BlockList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/components/BlockList.vue","mtime":1612684657984},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BlockList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"block-list\">\n    <div class=\"table-con\" v-if=\"!isMobile\">\n      <base-table\n        :dataSource=\"blockData\"\n        :columns=\"realColumns\"\n        showPagination\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @page-change=\"handlePageChange\"\n        :labels=\"realLabels\"\n      >\n        <div class=\"total-number border-bottom\" slot=\"header\">\n          <span\n            v-html=\"\n              $t('component.blockList.total', {\n                total: formatNumber(total),\n                fil: formatNumber(filTotal)\n              })\n            \"\n          ></span>\n        </div>\n      </base-table>\n    </div>\n    <mb-board\n      v-for=\"item in blockData\"\n      :key=\"item.cid\"\n      :dataSource=\"item\"\n      :columns=\"mbColumns\"\n      v-else\n    />\n    <mb-page v-if=\"isMobile\" @page-change=\"handlePageChange\" :total=\"total\" />\n  </div>\n</template>\n<script>\nimport { getBlockByHeight } from \"@/api/tipset\";\nimport { getBlocksByMiner } from \"@/api/account\";\nexport default {\n  name: \"BlockList\",\n  data() {\n    return {\n      loading: false,\n      total: 0,\n      filTotal: 0,\n      option: {\n        begindex: \"0\",\n        count: \"25\",\n        miners: this.miners\n      },\n      blockData: [],\n      columns: [\n        {\n          key: \"height\",\n          isLink: true,\n          target: \"tipset\",\n          hideInMobile: true\n        },\n        {\n          key: \"hash\",\n          isLink: true,\n          target: \"tipset\",\n          ellipsis: true\n        },\n        {\n          key: \"time\"\n        },\n        {\n          key: \"mes\"\n        },\n        {\n          key: \"size\"\n        },\n        {\n          key: \"miner\",\n          isLink: true,\n          target: \"address/detail\",\n          paramKey: \"address\"\n        },\n        {\n          key: \"reward\",\n          unit: \"FIL\"\n        }\n      ]\n    };\n  },\n  props: {\n    hideIndex: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 0\n    },\n    miners: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    realColumns() {\n      return this.columns.filter((item, index) => {\n        return !this.hideIndex.includes(index);\n      });\n    },\n    realLabels() {\n      return this.$t(\"component.blockList.label\").filter((item, index) => {\n        return !this.hideIndex.includes(index);\n      });\n    },\n    mbColumns() {\n      return this.realColumns\n        .map((item, index) => {\n          return {\n            ...item,\n            title: this.realLabels[index]\n          };\n        })\n        .filter(item => {\n          return !item.hideInMobile;\n        });\n    }\n  },\n  methods: {\n    handleSizeChange(v) {\n      this.option.count = v;\n    },\n    handlePageChange(v) {\n      this.option.begindex = (v - 1) * this.option.count;\n    },\n    async getBlockByHeight() {\n      try {\n        this.loading = true;\n        let data = await getBlockByHeight({\n          height: this.height\n        });\n        const blockData = data.blocks.map(item => {\n          const { height } = item;\n          return {\n            height\n          };\n        });\n        this.total = blockData.length;\n        this.blockData = blockData;\n      } catch (e) {\n        if (e) {\n          this.loading = false;\n        }\n      }\n    },\n    async getBlockByMiner() {\n      try {\n        this.loading = true;\n\n        let data = await getBlocksByMiner(this.option);\n        const dataSource = data.blocks.map(item => {\n          const { block_header, size, reward, cid, msg_cids } = item;\n          const { height, timestamp, miner } = block_header;\n          return {\n            height,\n            hash: cid,\n            time: this.formatTime(timestamp),\n            mes: msg_cids.length,\n            size,\n            miner,\n            reward\n          };\n        });\n        this.blockData = Object.freeze(dataSource);\n        this.total = Number(data.total);\n        this.filTotal = Number(data.total_fil);\n        this.loading = false;\n      } catch (e) {\n        if (e) {\n          this.loading = false;\n        }\n      }\n    }\n  },\n  mounted() {\n    //this.getBlockByMiner();\n  },\n  watch: {\n    height: {\n      immediate: true,\n      handler(v) {\n        if (v) {\n          this.getBlockByHeight();\n        }\n      }\n    },\n    option: {\n      deep: true,\n      immediate: true,\n      handler() {\n        this.getBlockByMiner();\n      }\n    },\n    miners() {\n      this.option = {\n        begindex: \"0\",\n        count: \"25\",\n        miners: this.miners\n      };\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.block-list {\n  .total-number {\n    height: 80px;\n    align-items: center;\n    padding: 0 100px;\n    display: flex;\n    background: var(--board-bg-color);\n    color: var(--main-text-color);\n    & ::v-deep > span {\n      margin-right: auto;\n      i {\n        color: var(--link-color);\n        font-size: 22px;\n      }\n    }\n    .el-dropdown-link {\n      color: white;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}