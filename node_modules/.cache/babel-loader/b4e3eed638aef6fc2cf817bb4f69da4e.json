{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/tipset/components/TicketChain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/tipset/components/TicketChain.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TicketChain.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"ticket-chain\">\n    <div class=\"chart-con\">\n      <div\n        class=\"chart\"\n        ref=\"chart\"\n        v-loading=\"loading\"\n        element-loading-background=\"var(--board-bg-color)\"\n      ></div>\n      <div class=\"block-type\" :style=\"typeStyle\">\n        <div class=\"arrow left\" @click=\"goLeft\" v-if=\"!atIndex\">\n          <span class=\"el-icon-arrow-left\"></span>\n        </div>\n        <div class=\"type-list\">\n          <span>\n            <i class=\"null\"></i>\n            {{ $t(\"tipset.blockType\")[0] }}\n          </span>\n          <span>\n            <i class=\"ticket\"></i>\n            {{ $t(\"tipset.blockType\")[1] }}\n          </span>\n          <span>\n            <i class=\"normal\"></i>\n            {{ $t(\"tipset.blockType\")[2] }}\n          </span>\n        </div>\n        <div @click=\"goRight\" class=\"arrow right\" v-if=\"!atIndex\">\n          <!-- <img src=\"@/assets/image/icons/right.png\" alt /> -->\n          <span class=\"el-icon-arrow-right\"></span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { getBlockByCid, getTipset } from \"@/api/tipset\";\nimport { getLatestBlock } from \"@/api/home\";\nimport { getBlockCoord } from \"../tool\";\nimport { mapState } from \"vuex\";\nimport Null from \"@/assets/image/block/null.png\";\nimport Ticket from \"@/assets/image/block/ticket.png\";\nimport Normal from \"@/assets/image/block/normal.png\";\nimport Active from \"@/assets/image/block/active.png\";\nimport NormalDark from \"@/assets/image/block/normal-dark.png\";\nimport NullDark from \"@/assets/image/block/null-dark.png\";\nlet chart;\nexport default {\n  name: \"TipsetChain\",\n  data() {\n    return {\n      tipsets: [],\n      startHeight: 0,\n      hashList: [],\n      loading: false,\n      typeStyle: {\n        marginTop: \"-160px\"\n      },\n      jumpSafeHeight: 0\n    };\n  },\n  props: {\n    hash: {\n      type: String,\n      default: \"\"\n    },\n    height: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: {\n    ...mapState([\"defaultHeight\"]),\n    normalSrc() {\n      return this.theme === \"light\" ? Normal : NormalDark;\n    },\n    ticketSrc() {\n      return this.theme === \"light\" ? Ticket : Active;\n    },\n    activeSrc() {\n      return this.theme === \"light\" ? Active : Ticket;\n    },\n    nullSrc() {\n      return this.theme === \"light\" ? Null : NullDark;\n    }\n  },\n  watch: {\n    height(v) {\n      if ((v <= this.startHeight && v > this.startHeight - 15) || v == 0) {\n        this.drawChart();\n      } else {\n        this.getTipset(v);\n      }\n    },\n    async hash(v) {\n      if (!v) {\n        return;\n      }\n      if (this.hashList.includes(v)) {\n        this.drawChart();\n      } else {\n        //for parent hash click\n        let data = await getBlockByCid({\n          cid: this.$route.query.hash\n        });\n        const height = data.blocks[0].block_header.height;\n        this.getTipset(height);\n      }\n    },\n    defaultHeight: {\n      handler(h) {\n        const { height, hash, jumpHeight } = this.$route.query;\n        if ((height || hash || jumpHeight) && !this.atIndex) {\n          return;\n        }\n        if (h != 0) {\n          this.startHeight = h;\n          this.getTipset(h);\n        }\n      }\n    },\n    theme() {\n      this.drawChart();\n    }\n  },\n  async mounted() {\n    chart = this.$chart.init(this.$refs.chart);\n    const height = this.height;\n    let currentHeight;\n    if (height) {\n      currentHeight = height;\n    } else if (this.hash) {\n      let data = await getBlockByCid({\n        cid: this.$route.query.hash\n      });\n      const height = data.blocks[0].block_header.height;\n      currentHeight = height;\n    } else {\n      let data = await getLatestBlock(1);\n      const height = data.block_header[0].block_header.height;\n      currentHeight = height;\n      this.jumpSafeHeight = height;\n    }\n    this.getTipset(currentHeight);\n    chart.on(\"click\", e => {\n      if (e.data.originData) {\n        this.$emit(\"hash-change\", e.data.originData.cid);\n      }\n      if (e.componentType === \"markLine\") {\n        this.$emit(\"height-change\", String(this.startHeight - e.value));\n      }\n    });\n  },\n  methods: {\n    async getTipset(height) {\n      if (height == 0) {\n        return;\n      }\n      if (height < 15) {\n        height = 15;\n      }\n      try {\n        this.loading = true;\n        const res = await getTipset({\n          end_height: height,\n          count: 15\n        });\n        this.loading = false;\n        let blocks = [];\n        const reverse = res.tipsets.reverse();\n        reverse.forEach(item => {\n          if (item.tipset.length > 0) {\n            blocks = blocks.concat(item.tipset);\n          }\n        });\n        blocks = blocks.map(item => {\n          const { size, cid, reward, block_header, msg_cids } = item;\n          const {\n            timestamp,\n            height,\n            miner,\n            parent_weight,\n            tickets,\n            parents,\n            parent_state_root\n          } = block_header;\n\n          return {\n            height: this.formatNumber(height),\n            hash: cid,\n            timestamp: this.formatTime(timestamp),\n            utcTime: this.getFormatTime(timestamp),\n            size: this.formatNumber(size),\n            mesLength: msg_cids.length,\n            miner,\n            reward,\n            parents,\n            parent_weight: this.formatNumber(parent_weight),\n            tickets,\n            state_root: parent_state_root\n          };\n        });\n        const hashList = blocks.map(item => {\n          return item.hash;\n        });\n        this.hashList = hashList;\n        this.startHeight = height;\n        this.tipsets = Object.freeze(reverse);\n        this.$emit(\"get-blocks\", blocks);\n        this.drawChart();\n      } catch (e) {\n        this.loading = false;\n      }\n    },\n    drawChart() {\n      const height = this.height;\n      const rate = this.rate;\n      const {\n        ticketNode,\n        otherNode,\n        link,\n        seriesMarkLine,\n        seriesMarkLineLabel,\n        markArea,\n        markAreaBorder,\n        markAreaActiveBorder\n      } = this.chartTheme.tipset;\n      this.tipsets.forEach((item, index) => {\n        item.tipset = getBlockCoord(item.tipset, index, item.min_ticket_block);\n      }); //get coords\n      const nodeList = this.tipsets.reduce((pre, cur) => {\n        const coords = cur.tipset.map((item, index) => {\n          if (!item.cid) {\n            return {\n              value: item.coord,\n              symbol: `image://${this.nullSrc}`,\n              symbolSize: [56 * rate, 17 * rate],\n              isTicket: false,\n              label: {\n                show: false\n              }\n            };\n          }\n          const formatName = item.block_header.miner;\n          let symbol;\n          if (item.cid === this.hash) {\n            symbol = `image://${this.activeSrc}`;\n          } else if (index === 0) {\n            symbol = `image://${this.ticketSrc}`;\n          } else {\n            symbol = `image://${this.normalSrc}`;\n          }\n          return {\n            name: item.cid,\n            originData: item,\n            value: item.coord,\n            symbol: symbol,\n            symbolSize: [56 * rate, 17 * rate],\n            symbolOffset: [10 * rate, 0],\n            isTicket: index === 0,\n            label: {\n              color:\n                index === 0 || item.cid === this.hash ? ticketNode : otherNode,\n              formatter() {\n                return formatName;\n              },\n              fontSize: 12 * rate\n            }\n          };\n        });\n        return pre.concat(coords);\n      }, []); //generate echarts nodes\n      const linkList = nodeList\n        .map((item, index) => {\n          if (!item.isTicket) {\n            return null;\n          }\n          return index;\n        })\n        .filter(item => {\n          return item !== null;\n        })\n        .map((item, index, arr) => {\n          return {\n            source: item,\n            target: arr[index + 1],\n            index: index,\n            height: nodeList[item].originData.block_header.height,\n            isNull: nodeList[item].isNull,\n            blockCount: nodeList[item].originData.blockCount,\n            x: nodeList[item].originData.coord[0],\n            label: {\n              normal: {\n                show: false\n              }\n            },\n            lineStyle: {\n              normal: {\n                color: link\n              }\n            }\n          };\n        }); //lines\n      const startHeight = this.startHeight;\n\n      //Change the height of a graph according to the number of blocks\n      const maxCount = linkList\n        .map(item => {\n          return item.blockCount;\n        })\n        .sort((a, b) => a - b)\n        .reverse()[0];\n      this.typeStyle = {\n        marginTop: `${maxCount * 20 - 200}px`\n      };\n      let lineList = [];\n      const format = this.formatNumber;\n      for (let i = 0; i < 15; i++) {\n        lineList.push({\n          xAxis: i,\n          label: {\n            show: true,\n            formatter() {\n              return format(startHeight - i);\n            }\n          }\n        });\n      }\n      let areaData = [];\n      linkList.forEach(item => {\n        let borderColor = markAreaBorder,\n          borderWidth = 1;\n        if (height && startHeight - height == item.x) {\n          borderColor = markAreaActiveBorder;\n          borderWidth = 2;\n        }\n        areaData.push([\n          {\n            coord: [item.x - 0.2, (item.blockCount + 1) * 5],\n            itemStyle: {\n              borderColor,\n              borderWidth\n            }\n          },\n          { coord: [item.x + 0.376, 1] }\n        ]);\n      });\n      var option = {\n        xAxis: {\n          show: false,\n          boundaryGap: false,\n          min: -1,\n          max: 15,\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: true,\n            alignWithLabel: true\n          },\n          splitLine: {\n            show: false\n          }\n        },\n        yAxis: {\n          min: 0,\n          max: 70,\n          show: false,\n          type: \"value\",\n          inverse: true\n        },\n        grid: {\n          top: 40 * rate,\n          left: -40,\n          right: 0,\n          bottom: 0\n        },\n        series: [\n          {\n            type: \"graph\",\n            layout: \"none\",\n            id: \"a\",\n            coordinateSystem: \"cartesian2d\",\n            edgeSymbol: [\"\", \"arrow\"],\n            label: {\n              show: true,\n              position: \"inside\"\n            },\n            lineStyle: {\n              normal: {\n                width: 2,\n                shadowColor: \"none\"\n              }\n            },\n            markLine: {\n              symbol: [\"none\", \"none\"],\n              silent: false,\n              lineStyle: {\n                color: seriesMarkLine,\n                width: 1,\n                type: \"solid\"\n              },\n              data: lineList,\n              label: {\n                position: \"start\",\n                color: seriesMarkLineLabel,\n                fontSize: 12 * rate\n              }\n            },\n            markArea: {\n              data: areaData,\n              itemStyle: {\n                color: markArea,\n                borderColor: markAreaBorder,\n                borderWidth: 1,\n                borderType: \"dotted\"\n              }\n            },\n            data: nodeList,\n            links: linkList,\n            z: 0,\n            zlevel: 4\n          }\n        ]\n      };\n      chart.setOption(option);\n    },\n    async goRight() {\n      let jumpHeight = Math.max(this.startHeight - 15, 15);\n      await this.getTipset(jumpHeight);\n      this.goTo(\"tipset\", {\n        query: {\n          jumpHeight\n        }\n      });\n    },\n    async goLeft() {\n      let jumpHeight = 0;\n      if (this.startHeight === this.jumpSafeHeight) {\n        return;\n      }\n      if (this.jumpSafeHeight === 0) {\n        let data = await getLatestBlock(1);\n        this.jumpSafeHeight = Number(data.block_header[0].block_header.height);\n      }\n      if (Number(this.startHeight) + 15 >= this.jumpSafeHeight) {\n        jumpHeight = this.jumpSafeHeight;\n      } else {\n        jumpHeight = Number(this.startHeight) + 15;\n      }\n      await this.getTipset(jumpHeight);\n      this.goTo(\"tipset\", {\n        query: {\n          jumpHeight: jumpHeight\n        }\n      });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.ticket-chain {\n  border-radius: 8px;\n  box-shadow: 0px 1px 7px 9px rgba(0, 0, 0, 0.03);\n  background: var(--board-bg-color);\n  .chart-con {\n    width: 100%;\n    .chart {\n      width: 100%;\n      height: 350px;\n    }\n  }\n  .block-type {\n    position: relative;\n    z-index: 10;\n    .arrow {\n      position: absolute;\n      top: -10px;\n      font-size: 30px;\n      color: var(--main-text-color);\n      cursor: pointer;\n      &.left {\n        left: 20px;\n      }\n      &.right {\n        right: 20px;\n      }\n    }\n  }\n  .block-type div.type-list {\n    width: 500px;\n    margin: 0 auto;\n    padding-bottom: 20px;\n    color: var(--main-text-color);\n    span {\n      margin-left: 20px;\n    }\n    i {\n      display: inline-block;\n      width: 10px;\n      height: 10px;\n      border-radius: 50%;\n      margin-right: 5px;\n      &.null {\n        background: var(--null-block-bg-color);\n      }\n      &.ticket {\n        background: var(--ticket-block-bg-color);\n      }\n      &.normal {\n        border: 1px solid var(--other-block-border-color);\n        width: 8px;\n        height: 8px;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/tipset/components"}]}