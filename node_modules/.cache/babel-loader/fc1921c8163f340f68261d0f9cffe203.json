{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/home/components/table/MessageTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/home/components/table/MessageTable.vue","mtime":1613722984206},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MessageTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"message-table\">\n    <base-table\n      :dataSource=\"messageTable.dataSource\"\n      :columns=\"messageTable.columns\"\n      :loadMore=\"true\"\n      @load=\"loadMessageData\"\n      :showLoading=\"messageTable.loading\"\n      :showAppend=\"messageTable.append && !isMobile\"\n      :max-height=\"isMobile ? 200 : 400 * rate\"\n      @click-append=\"goTo('messageList')\"\n      :labels=\"$t('home.messageTable.label')\"\n      radius\n    ></base-table>\n  </div>\n</template>\n<script>\nimport { getLatestMessage } from \"@/api/home\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"MessageTable\",\n  data() {\n    return {\n      messageTable: {\n        dataSource: [],\n        columns: [\n          {\n            key: \"id\",\n            target: \"message/detail\",\n            paramKey: \"cid\",\n            isLink: true,\n            ellipsis: true\n          },\n          {\n            key: \"time\"\n          },\n          {\n            key: \"from\",\n            isLink: true,\n            target: \"address/detail\",\n            paramKey: \"address\",\n            ellipsis: true\n          },\n          {\n            key: \"to\",\n            isLink: true,\n            target: \"address/detail\",\n            paramKey: \"address\",\n            ellipsis: true\n          },\n          {\n            key: \"value\"\n          }\n        ],\n        loadCount: 0,\n        loading: false,\n        append: false,\n        timer: null\n      }\n    };\n  },\n  methods: {\n    initMesTimer() {\n      this.messageTable.timer = setInterval(() => {\n        this.messageTable.dataSource = this.messageTable.dataSource.map(\n          item => {\n            return {\n              ...item,\n              time: this.formatTime(item.originTime, item.current),\n              current: item.current + 1000\n            };\n          }\n        );\n      }, 1000);\n    },\n    async getMessageData(num) {\n      if (num > 30) {\n        return;\n      }\n      this.messageTable.loading = true;\n      try {\n        const data = await getLatestMessage(num);\n\n        const dataSource = data.msg.map(item => {\n          const { from, to, value } = item.msg;\n          const current = new Date().getTime();\n          const realTime =\n            item.msgcreate > current / 1000 ? current / 1000 : item.msgcreate;\n            console.log(\"value:\",)\n          return {\n            from,\n            to,\n            value: value,\n            time: this.formatTime(realTime),\n            originTime: realTime,\n            current: current,\n            id: item.cid\n          };\n        });\n        this.messageTable.dataSource = dataSource;\n        this.messageTable.loading = false;\n        return Promise.resolve();\n      } catch (e) {\n        this.messageTable.loading = false;\n      }\n    },\n    async loadMessageData() {\n      if (this.messageTable.loading) {\n        return;\n      }\n      if (this.messageTable.loadCount == 3) {\n        this.messageTable.append = true;\n        return;\n      } else {\n        clearInterval(this.messageTable.timer);\n        try {\n          this.messageTable.loading = true;\n          await this.getMessageData(10 * (this.messageTable.loadCount + 1));\n          this.messageTable.loadCount++;\n          this.messageTable.loading = false;\n          this.initMesTimer();\n        } catch (e) {\n          if (e) {\n            this.messageTable.loading = false;\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    async latestBlockHeight() {\n      if (this.loadCount === 1) {\n        return;\n      }\n      clearInterval(this.messageTable.timer);\n      await this.getMessageData(this.messageTable.loadCount * 10);\n      this.initMesTimer();\n    }\n  },\n  computed: {\n    ...mapState([\"rate\"])\n  },\n  beforeDestroy() {\n    clearInterval(this.messageTable.timer);\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.message-table {\n  div {\n    background: var(--main-bg-color);\n  }\n}\n</style>\n"],"sourceRoot":"src/views/home/components/table"}]}