{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/wuzhanfly/git/filscan-frontend/src/api/home.js","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/api/home.js","mtime":1612684657984},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZmV0Y2ggfSBmcm9tICIuL2ZldGNoIjsKZXhwb3J0IGZ1bmN0aW9uIGdldExhdGVzdEJsb2NrKG51bSkgewogIHJldHVybiBmZXRjaCh7CiAgICBtZXRob2Q6ICJwb3N0IiwKICAgIHVybDogIkxhdGVzdEJsb2NrIiwKICAgIGRhdGE6IHsKICAgICAgbnVtOiBudW0KICAgIH0KICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0TGF0ZXN0TWVzc2FnZShudW0pIHsKICByZXR1cm4gZmV0Y2goewogICAgbWV0aG9kOiAicG9zdCIsCiAgICB1cmw6ICJMYXRlc3RNc2ciLAogICAgZGF0YTogewogICAgICBudW06IG51bQogICAgfQogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBnZXRCb2FyZEluZm8oKSB7CiAgcmV0dXJuIGZldGNoKHsKICAgIG1ldGhvZDogInBvc3QiLAogICAgdXJsOiAiQmFzZUluZm9ybWF0aW9uIgogIH0pOwp9Ci8qCnBhcmFtOnsKICBzdGFydF90aW1lIHRpbWVzdGFtcAogIGVuZF90aW1lIHRpbWVzdGFtcAp9CiovCgpleHBvcnQgZnVuY3Rpb24gZ2V0QmxvY2tUaW1lRGF0YShkYXRhKSB7CiAgcmV0dXJuIGZldGNoKHsKICAgIG1ldGhvZDogInBvc3QiLAogICAgdXJsOiAiQmxvY2t0aW1lR3JhcGhpY2FsIiwKICAgIGRhdGE6IGRhdGEKICB9KTsKfQovKgpwYXJhbTp7CiAgc3RhcnRfdGltZSB0aW1lc3RhbXAKICBlbmRfdGltZSB0aW1lc3RhbXAKfQoqLwoKZXhwb3J0IGZ1bmN0aW9uIGdldEJsb2NTaXplRGF0YShkYXRhKSB7CiAgcmV0dXJuIGZldGNoKHsKICAgIG1ldGhvZDogInBvc3QiLAogICAgdXJsOiAiQXZnQmxvY2toZWFkZXJTaXplR3JhcGhpY2FsIiwKICAgIGRhdGE6IGRhdGEKICB9KTsKfQovKgpwYXJhbTp7CiAgdGltZSB0aW1lc3RhbXAKfQoqLwoKZXhwb3J0IGZ1bmN0aW9uIGdldFRvdGFsUG93ZXJEYXRhKGRhdGEpIHsKICByZXR1cm4gZmV0Y2goewogICAgbWV0aG9kOiAicG9zdCIsCiAgICB1cmw6ICIvVG90YWxQb3dlckdyYXBoaWNhbCIsCiAgICBkYXRhOiBkYXRhCiAgfSk7Cn0KLyoKcGFyYW06ewogIGtleSBzdHJpbmcKICBmaWx0ZXIgbnVtYmVyCn0KKi8KCmV4cG9ydCBmdW5jdGlvbiBzZWFyY2goZGF0YSkgewogIHJldHVybiBmZXRjaCh7CiAgICBtZXRob2Q6ICJwb3N0IiwKICAgIHVybDogIlNlYXJjaEluZGV4IiwKICAgIGRhdGE6IGRhdGEKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0QWN0aXZlUGVlckNvdW50KCkgewogIHJldHVybiBmZXRjaCh7CiAgICBtZXRob2Q6ICJwb3N0IiwKICAgIHVybDogIi9wZWVyL0FjdGl2ZVBlZXJDb3VudCIKICB9KTsKfQ=="},{"version":3,"sources":["/home/wuzhanfly/git/filscan-frontend/src/api/home.js"],"names":["fetch","getLatestBlock","num","method","url","data","getLatestMessage","getBoardInfo","getBlockTimeData","getBlocSizeData","getTotalPowerData","search","getActivePeerCount"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAO,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAClC,SAAOF,KAAK,CAAC;AACXG,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,aAFM;AAGXC,IAAAA,IAAI,EAAE;AACJH,MAAAA,GAAG,EAAHA;AADI;AAHK,GAAD,CAAZ;AAOD;AACD,OAAO,SAASI,gBAAT,CAA0BJ,GAA1B,EAA+B;AACpC,SAAOF,KAAK,CAAC;AACXG,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,WAFM;AAGXC,IAAAA,IAAI,EAAE;AACJH,MAAAA,GAAG,EAAHA;AADI;AAHK,GAAD,CAAZ;AAOD;AACD,OAAO,SAASK,YAAT,GAAwB;AAC7B,SAAOP,KAAK,CAAC;AACXG,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE;AAFM,GAAD,CAAZ;AAID;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,gBAAT,CAA0BH,IAA1B,EAAgC;AACrC,SAAOL,KAAK,CAAC;AACXG,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,oBAFM;AAGXC,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAZ;AAKD;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,eAAT,CAAyBJ,IAAzB,EAA+B;AACpC,SAAOL,KAAK,CAAC;AACXG,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,6BAFM;AAGXC,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAZ;AAKD;AACD;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,iBAAT,CAA2BL,IAA3B,EAAiC;AACtC,SAAOL,KAAK,CAAC;AACXG,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,sBAFM;AAGXC,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAZ;AAKD;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,MAAT,CAAgBN,IAAhB,EAAsB;AAC3B,SAAOL,KAAK,CAAC;AACXG,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,aAFM;AAGXC,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAZ;AAKD;AAED,OAAO,SAASO,kBAAT,GAA8B;AACnC,SAAOZ,KAAK,CAAC;AACXG,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE;AAFM,GAAD,CAAZ;AAID","sourcesContent":["import { fetch } from \"./fetch\";\nexport function getLatestBlock(num) {\n  return fetch({\n    method: \"post\",\n    url: \"LatestBlock\",\n    data: {\n      num\n    }\n  });\n}\nexport function getLatestMessage(num) {\n  return fetch({\n    method: \"post\",\n    url: \"LatestMsg\",\n    data: {\n      num\n    }\n  });\n}\nexport function getBoardInfo() {\n  return fetch({\n    method: \"post\",\n    url: \"BaseInformation\"\n  });\n}\n/*\nparam:{\n  start_time timestamp\n  end_time timestamp\n}\n*/\nexport function getBlockTimeData(data) {\n  return fetch({\n    method: \"post\",\n    url: \"BlocktimeGraphical\",\n    data\n  });\n}\n/*\nparam:{\n  start_time timestamp\n  end_time timestamp\n}\n*/\nexport function getBlocSizeData(data) {\n  return fetch({\n    method: \"post\",\n    url: \"AvgBlockheaderSizeGraphical\",\n    data\n  });\n}\n/*\nparam:{\n  time timestamp\n}\n*/\nexport function getTotalPowerData(data) {\n  return fetch({\n    method: \"post\",\n    url: \"/TotalPowerGraphical\",\n    data\n  });\n}\n/*\nparam:{\n  key string\n  filter number\n}\n*/\nexport function search(data) {\n  return fetch({\n    method: \"post\",\n    url: \"SearchIndex\",\n    data\n  });\n}\n\nexport function getActivePeerCount() {\n  return fetch({\n    method: \"post\",\n    url: \"/peer/ActivePeerCount\"\n  });\n}\n"]}]}