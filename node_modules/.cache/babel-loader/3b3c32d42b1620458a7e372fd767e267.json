{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js!/home/wuzhanfly/git/filscan-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/wuzhanfly/git/filscan-frontend/src/views/address/mixin.js","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/address/mixin.js","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIG1peGluID0gewogIG1ldGhvZHM6IHsKICAgIHBhcnNlQWRkcmVzczogZnVuY3Rpb24gcGFyc2VBZGRyZXNzKGFjY291bnQpIHsKICAgICAgdmFyIHR5cGVzID0gdGhpcy4kdCgiYWRkcmVzcy50eXBlIik7CiAgICAgIHZhciBhZGRyZXNzID0gYWNjb3VudC5hZGRyZXNzLAogICAgICAgICAgaXNfbWluZXIgPSBhY2NvdW50LmlzX21pbmVyLAogICAgICAgICAgaXNfb3duZXIgPSBhY2NvdW50LmlzX293bmVyLAogICAgICAgICAgaXNfd2FsbGV0ID0gYWNjb3VudC5pc193YWxsZXQsCiAgICAgICAgICBpc19zdG9yYWdlX21pbmVyID0gYWNjb3VudC5pc19zdG9yYWdlX21pbmVyLAogICAgICAgICAgYWN0b3IgPSBhY2NvdW50LmFjdG9yOwogICAgICB2YXIgQmFsYW5jZSA9IGFjdG9yLkJhbGFuY2UsCiAgICAgICAgICBjb2RlID0gYWN0b3IuY29kZSwKICAgICAgICAgIG5vbmNlID0gYWN0b3Iubm9uY2U7CiAgICAgIHZhciB0eXBlS2V5ID0gIiI7CgogICAgICBpZiAoaXNfbWluZXIpIHsKICAgICAgICB0eXBlS2V5ID0gIm1pbmVyIjsKICAgICAgfSBlbHNlIGlmIChpc19vd25lcikgewogICAgICAgIHR5cGVLZXkgPSAib3duZXIiOwogICAgICB9IGVsc2UgaWYgKGlzX3dhbGxldCkgewogICAgICAgIHR5cGVLZXkgPSAid2FsbGV0IjsKICAgICAgfSBlbHNlIGlmIChpc19zdG9yYWdlX21pbmVyKSB7CiAgICAgICAgdHlwZUtleSA9ICJtaW5lciI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdHlwZUtleSA9ICJhY2NvdW50IjsKICAgICAgfQoKICAgICAgcmV0dXJuIHsKICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICAgIHR5cGU6IHR5cGVzW3R5cGVLZXldLAogICAgICAgIGJhbGFuY2U6IHRoaXMuZm9ybWF0TnVtYmVyKEJhbGFuY2UsIHRoaXMuaXNNb2JpbGUgPyA1IDogMTgpLAogICAgICAgIGNvZGU6IGNvZGUsCiAgICAgICAgbm9uY2U6IG5vbmNlCiAgICAgIH07CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBtaXhpbjs="},{"version":3,"sources":["/home/wuzhanfly/git/filscan-frontend/src/views/address/mixin.js"],"names":["mixin","methods","parseAddress","account","types","$t","address","is_miner","is_owner","is_wallet","is_storage_miner","actor","Balance","code","nonce","typeKey","type","balance","formatNumber","isMobile"],"mappings":"AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMC,OADN,EACe;AACpB,UAAMC,KAAK,GAAG,KAAKC,EAAL,CAAQ,cAAR,CAAd;AADoB,UAGlBC,OAHkB,GAShBH,OATgB,CAGlBG,OAHkB;AAAA,UAIlBC,QAJkB,GAShBJ,OATgB,CAIlBI,QAJkB;AAAA,UAKlBC,QALkB,GAShBL,OATgB,CAKlBK,QALkB;AAAA,UAMlBC,SANkB,GAShBN,OATgB,CAMlBM,SANkB;AAAA,UAOlBC,gBAPkB,GAShBP,OATgB,CAOlBO,gBAPkB;AAAA,UAQlBC,KARkB,GAShBR,OATgB,CAQlBQ,KARkB;AAAA,UAUZC,OAVY,GAUaD,KAVb,CAUZC,OAVY;AAAA,UAUHC,IAVG,GAUaF,KAVb,CAUHE,IAVG;AAAA,UAUGC,KAVH,GAUaH,KAVb,CAUGG,KAVH;AAWpB,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAIR,QAAJ,EAAc;AACZQ,QAAAA,OAAO,GAAG,OAAV;AACD,OAFD,MAEO,IAAIP,QAAJ,EAAc;AACnBO,QAAAA,OAAO,GAAG,OAAV;AACD,OAFM,MAEA,IAAIN,SAAJ,EAAe;AACpBM,QAAAA,OAAO,GAAG,QAAV;AACD,OAFM,MAEA,IAAIL,gBAAJ,EAAsB;AAC3BK,QAAAA,OAAO,GAAG,OAAV;AACD,OAFM,MAEA;AACLA,QAAAA,OAAO,GAAG,SAAV;AACD;;AACD,aAAO;AACLT,QAAAA,OAAO,EAAPA,OADK;AAELU,QAAAA,IAAI,EAAEZ,KAAK,CAACW,OAAD,CAFN;AAGLE,QAAAA,OAAO,EAAE,KAAKC,YAAL,CAAkBN,OAAlB,EAA2B,KAAKO,QAAL,GAAgB,CAAhB,GAAoB,EAA/C,CAHJ;AAILN,QAAAA,IAAI,EAAJA,IAJK;AAKLC,QAAAA,KAAK,EAALA;AALK,OAAP;AAOD;AA/BM;AADG,CAAd;AAmCA,eAAed,KAAf","sourcesContent":["const mixin = {\n  methods: {\n    parseAddress(account) {\n      const types = this.$t(\"address.type\");\n      const {\n        address,\n        is_miner,\n        is_owner,\n        is_wallet,\n        is_storage_miner,\n        actor\n      } = account;\n      const { Balance, code, nonce } = actor;\n      let typeKey = \"\";\n      if (is_miner) {\n        typeKey = \"miner\";\n      } else if (is_owner) {\n        typeKey = \"owner\";\n      } else if (is_wallet) {\n        typeKey = \"wallet\";\n      } else if (is_storage_miner) {\n        typeKey = \"miner\";\n      } else {\n        typeKey = \"account\";\n      }\n      return {\n        address,\n        type: types[typeKey],\n        balance: this.formatNumber(Balance, this.isMobile ? 5 : 18),\n        code,\n        nonce\n      };\n    }\n  }\n};\nexport default mixin;\n"]}]}