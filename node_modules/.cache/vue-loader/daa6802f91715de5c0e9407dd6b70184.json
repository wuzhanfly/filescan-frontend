{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/metrics/FilecoinBlockChart.vue?vue&type=style&index=0&id=d002dcae&lang=scss&scoped=true&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/metrics/FilecoinBlockChart.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZpbGVjb2luLWJsb2NrLWNoYXJ0IHsKICBiYWNrZ3JvdW5kOiB2YXIoLS1ib2FyZC1iZy1jb2xvcik7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIGJveC1zaGFkb3c6IDBweCAxcHggN3B4IDlweCByZ2JhKDAsIDAsIDAsIDAuMDMpOwogIC50aXRsZSB7CiAgICBoZWlnaHQ6IDYwcHg7CiAgICBsaW5lLWhlaWdodDogNjBweDsKICAgIHBhZGRpbmctbGVmdDogMzBweDsKICAgIGZvbnQtc2l6ZTogMjBweDsKICAgIGNvbG9yOiB2YXIoLS1tYWluLXRleHQtY29sb3IpOwogIH0KICAuY2hhcnQtY29uIHsKICAgIGhlaWdodDogNDAwcHg7CiAgfQogIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgewogICAgLmNoYXJ0LWNvbiB7CiAgICAgIGhlaWdodDogMjAwcHg7CiAgICB9CiAgICBtYXJnaW46IDEwcHggMDsKICAgIGJveC1zaGFkb3c6IDBweCAycHggNHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDMpOwogICAgYm9yZGVyLXJhZGl1czogMTBweDsKICAgIC50aXRsZSB7CiAgICAgIHBhZGRpbmc6IDMuM3Z3IDAgMCAzLjN2dzsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["FilecoinBlockChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FilecoinBlockChart.vue","sourceRoot":"src/views/stats/components/metrics","sourcesContent":["<template>\n  <div class=\"filecoin-block-chart\">\n    <div class=\"title\">{{ $t(\"stats.metrics.filecoin.title\") }}</div>\n    <div ref=\"chart\" class=\"chart-con\"></div>\n  </div>\n</template>\n<script>\nimport { getBlockReward } from \"@/api/token\";\nimport dayjs from \"dayjs\";\nlet chart;\nexport default {\n  name: \"FilecoinBlockChart\",\n  data() {\n    return {\n      dataList: []\n    };\n  },\n  methods: {\n    drawChart() {\n      const numberConversion = this.numberConversion;\n      const rate = this.rate;\n      const { area, seriesItem, splitLine } = this.chartTheme.filecoin;\n      const reward = this.$t(\"chart.filecoin\");\n      const dataList = this.dataList;\n      const xData = dataList.map(item => {\n        return dayjs.unix(item.name).format(\"MMM YYYY\");\n      });\n      const color = this.theme === \"light\" ? \"black\" : \"white\";\n      const option = {\n        legend: {\n          left: 30 * rate,\n          selectedMode: false,\n          data: [\n            {\n              name: reward,\n              icon: \"circle\"\n            }\n          ],\n          textStyle: {\n            fontSize: 12 * rate,\n            color\n          }\n        },\n        grid: {\n          left: 50 * rate\n        },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: xData,\n          axisLabel: {\n            textStyle: {\n              fontSize: 12 * rate,\n              color\n            },\n            margin: 20\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          splitLine: {\n            lineStyle: {\n              type: \"dashed\",\n              color: splitLine\n            }\n          },\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            formatter(v) {\n              return numberConversion(v);\n            },\n            textStyle: {\n              fontSize: 12 * rate,\n              color\n            }\n          }\n        },\n        series: [\n          {\n            data: dataList,\n            type: \"line\",\n            smooth: true,\n            name: reward,\n            symbol: \"none\",\n            itemStyle: {\n              color: seriesItem\n            },\n            areaStyle: {\n              color: area\n            }\n          }\n        ]\n      };\n      chart.setOption(option);\n    },\n    async getBlockReward() {\n      try {\n        this.loading = true;\n        let res = await getBlockReward({\n          time_diff: 86400 * 30,\n          repeate: 12 * 28\n        });\n        const dataList = res.map(item => {\n          return {\n            name: item.time,\n            value: item.block_rewards\n          };\n        });\n        this.dataList = Object.freeze(dataList);\n        this.drawChart();\n      } catch (e) {\n        this.loading = false;\n      }\n    }\n  },\n  mounted() {\n    chart = this.$chart.init(this.$refs.chart);\n    this.getBlockReward();\n  },\n  watch: {\n    theme() {\n      this.drawChart();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.filecoin-block-chart {\n  background: var(--board-bg-color);\n  border-radius: 8px;\n  box-shadow: 0px 1px 7px 9px rgba(0, 0, 0, 0.03);\n  .title {\n    height: 60px;\n    line-height: 60px;\n    padding-left: 30px;\n    font-size: 20px;\n    color: var(--main-text-color);\n  }\n  .chart-con {\n    height: 400px;\n  }\n  @media (max-width: 768px) {\n    .chart-con {\n      height: 200px;\n    }\n    margin: 10px 0;\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n    .title {\n      padding: 3.3vw 0 0 3.3vw;\n    }\n  }\n}\n</style>\n"]}]}