{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/components/BlockList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/components/BlockList.vue","mtime":1612684657984},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEJsb2NrQnlIZWlnaHQgfSBmcm9tICJAL2FwaS90aXBzZXQiOwppbXBvcnQgeyBnZXRCbG9ja3NCeU1pbmVyIH0gZnJvbSAiQC9hcGkvYWNjb3VudCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQmxvY2tMaXN0IiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIHRvdGFsOiAwLAogICAgICBmaWxUb3RhbDogMCwKICAgICAgb3B0aW9uOiB7CiAgICAgICAgYmVnaW5kZXg6ICIwIiwKICAgICAgICBjb3VudDogIjI1IiwKICAgICAgICBtaW5lcnM6IHRoaXMubWluZXJzCiAgICAgIH0sCiAgICAgIGJsb2NrRGF0YTogW10sCiAgICAgIGNvbHVtbnM6IFsKICAgICAgICB7CiAgICAgICAgICBrZXk6ICJoZWlnaHQiLAogICAgICAgICAgaXNMaW5rOiB0cnVlLAogICAgICAgICAgdGFyZ2V0OiAidGlwc2V0IiwKICAgICAgICAgIGhpZGVJbk1vYmlsZTogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAga2V5OiAiaGFzaCIsCiAgICAgICAgICBpc0xpbms6IHRydWUsCiAgICAgICAgICB0YXJnZXQ6ICJ0aXBzZXQiLAogICAgICAgICAgZWxsaXBzaXM6IHRydWUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGtleTogInRpbWUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBrZXk6ICJtZXMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBrZXk6ICJzaXplIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAga2V5OiAibWluZXIiLAogICAgICAgICAgaXNMaW5rOiB0cnVlLAogICAgICAgICAgdGFyZ2V0OiAiYWRkcmVzcy9kZXRhaWwiLAogICAgICAgICAgcGFyYW1LZXk6ICJhZGRyZXNzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAga2V5OiAicmV3YXJkIiwKICAgICAgICAgIHVuaXQ6ICJGSUwiCiAgICAgICAgfQogICAgICBdCiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIGhpZGVJbmRleDogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBoZWlnaHQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgbWluZXJzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHJlYWxDb2x1bW5zKCkgewogICAgICByZXR1cm4gdGhpcy5jb2x1bW5zLmZpbHRlcigoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICByZXR1cm4gIXRoaXMuaGlkZUluZGV4LmluY2x1ZGVzKGluZGV4KTsKICAgICAgfSk7CiAgICB9LAogICAgcmVhbExhYmVscygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHQoImNvbXBvbmVudC5ibG9ja0xpc3QubGFiZWwiKS5maWx0ZXIoKGl0ZW0sIGluZGV4KSA9PiB7CiAgICAgICAgcmV0dXJuICF0aGlzLmhpZGVJbmRleC5pbmNsdWRlcyhpbmRleCk7CiAgICAgIH0pOwogICAgfSwKICAgIG1iQ29sdW1ucygpIHsKICAgICAgcmV0dXJuIHRoaXMucmVhbENvbHVtbnMKICAgICAgICAubWFwKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgLi4uaXRlbSwKICAgICAgICAgICAgdGl0bGU6IHRoaXMucmVhbExhYmVsc1tpbmRleF0KICAgICAgICAgIH07CiAgICAgICAgfSkKICAgICAgICAuZmlsdGVyKGl0ZW0gPT4gewogICAgICAgICAgcmV0dXJuICFpdGVtLmhpZGVJbk1vYmlsZTsKICAgICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZVNpemVDaGFuZ2UodikgewogICAgICB0aGlzLm9wdGlvbi5jb3VudCA9IHY7CiAgICB9LAogICAgaGFuZGxlUGFnZUNoYW5nZSh2KSB7CiAgICAgIHRoaXMub3B0aW9uLmJlZ2luZGV4ID0gKHYgLSAxKSAqIHRoaXMub3B0aW9uLmNvdW50OwogICAgfSwKICAgIGFzeW5jIGdldEJsb2NrQnlIZWlnaHQoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICBsZXQgZGF0YSA9IGF3YWl0IGdldEJsb2NrQnlIZWlnaHQoewogICAgICAgICAgaGVpZ2h0OiB0aGlzLmhlaWdodAogICAgICAgIH0pOwogICAgICAgIGNvbnN0IGJsb2NrRGF0YSA9IGRhdGEuYmxvY2tzLm1hcChpdGVtID0+IHsKICAgICAgICAgIGNvbnN0IHsgaGVpZ2h0IH0gPSBpdGVtOwogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgaGVpZ2h0CiAgICAgICAgICB9OwogICAgICAgIH0pOwogICAgICAgIHRoaXMudG90YWwgPSBibG9ja0RhdGEubGVuZ3RoOwogICAgICAgIHRoaXMuYmxvY2tEYXRhID0gYmxvY2tEYXRhOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgaWYgKGUpIHsKICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGFzeW5jIGdldEJsb2NrQnlNaW5lcigpIHsKICAgICAgdHJ5IHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwoKICAgICAgICBsZXQgZGF0YSA9IGF3YWl0IGdldEJsb2Nrc0J5TWluZXIodGhpcy5vcHRpb24pOwogICAgICAgIGNvbnN0IGRhdGFTb3VyY2UgPSBkYXRhLmJsb2Nrcy5tYXAoaXRlbSA9PiB7CiAgICAgICAgICBjb25zdCB7IGJsb2NrX2hlYWRlciwgc2l6ZSwgcmV3YXJkLCBjaWQsIG1zZ19jaWRzIH0gPSBpdGVtOwogICAgICAgICAgY29uc3QgeyBoZWlnaHQsIHRpbWVzdGFtcCwgbWluZXIgfSA9IGJsb2NrX2hlYWRlcjsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGhlaWdodCwKICAgICAgICAgICAgaGFzaDogY2lkLAogICAgICAgICAgICB0aW1lOiB0aGlzLmZvcm1hdFRpbWUodGltZXN0YW1wKSwKICAgICAgICAgICAgbWVzOiBtc2dfY2lkcy5sZW5ndGgsCiAgICAgICAgICAgIHNpemUsCiAgICAgICAgICAgIG1pbmVyLAogICAgICAgICAgICByZXdhcmQKICAgICAgICAgIH07CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5ibG9ja0RhdGEgPSBPYmplY3QuZnJlZXplKGRhdGFTb3VyY2UpOwogICAgICAgIHRoaXMudG90YWwgPSBOdW1iZXIoZGF0YS50b3RhbCk7CiAgICAgICAgdGhpcy5maWxUb3RhbCA9IE51bWJlcihkYXRhLnRvdGFsX2ZpbCk7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBpZiAoZSkgewogICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgLy90aGlzLmdldEJsb2NrQnlNaW5lcigpOwogIH0sCiAgd2F0Y2g6IHsKICAgIGhlaWdodDogewogICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgIGhhbmRsZXIodikgewogICAgICAgIGlmICh2KSB7CiAgICAgICAgICB0aGlzLmdldEJsb2NrQnlIZWlnaHQoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBvcHRpb246IHsKICAgICAgZGVlcDogdHJ1ZSwKICAgICAgaW1tZWRpYXRlOiB0cnVlLAogICAgICBoYW5kbGVyKCkgewogICAgICAgIHRoaXMuZ2V0QmxvY2tCeU1pbmVyKCk7CiAgICAgIH0KICAgIH0sCiAgICBtaW5lcnMoKSB7CiAgICAgIHRoaXMub3B0aW9uID0gewogICAgICAgIGJlZ2luZGV4OiAiMCIsCiAgICAgICAgY291bnQ6ICIyNSIsCiAgICAgICAgbWluZXJzOiB0aGlzLm1pbmVycwogICAgICB9OwogICAgfQogIH0KfTsK"},{"version":3,"sources":["BlockList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"BlockList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"block-list\">\n    <div class=\"table-con\" v-if=\"!isMobile\">\n      <base-table\n        :dataSource=\"blockData\"\n        :columns=\"realColumns\"\n        showPagination\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @page-change=\"handlePageChange\"\n        :labels=\"realLabels\"\n      >\n        <div class=\"total-number border-bottom\" slot=\"header\">\n          <span\n            v-html=\"\n              $t('component.blockList.total', {\n                total: formatNumber(total),\n                fil: formatNumber(filTotal)\n              })\n            \"\n          ></span>\n        </div>\n      </base-table>\n    </div>\n    <mb-board\n      v-for=\"item in blockData\"\n      :key=\"item.cid\"\n      :dataSource=\"item\"\n      :columns=\"mbColumns\"\n      v-else\n    />\n    <mb-page v-if=\"isMobile\" @page-change=\"handlePageChange\" :total=\"total\" />\n  </div>\n</template>\n<script>\nimport { getBlockByHeight } from \"@/api/tipset\";\nimport { getBlocksByMiner } from \"@/api/account\";\nexport default {\n  name: \"BlockList\",\n  data() {\n    return {\n      loading: false,\n      total: 0,\n      filTotal: 0,\n      option: {\n        begindex: \"0\",\n        count: \"25\",\n        miners: this.miners\n      },\n      blockData: [],\n      columns: [\n        {\n          key: \"height\",\n          isLink: true,\n          target: \"tipset\",\n          hideInMobile: true\n        },\n        {\n          key: \"hash\",\n          isLink: true,\n          target: \"tipset\",\n          ellipsis: true\n        },\n        {\n          key: \"time\"\n        },\n        {\n          key: \"mes\"\n        },\n        {\n          key: \"size\"\n        },\n        {\n          key: \"miner\",\n          isLink: true,\n          target: \"address/detail\",\n          paramKey: \"address\"\n        },\n        {\n          key: \"reward\",\n          unit: \"FIL\"\n        }\n      ]\n    };\n  },\n  props: {\n    hideIndex: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 0\n    },\n    miners: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    realColumns() {\n      return this.columns.filter((item, index) => {\n        return !this.hideIndex.includes(index);\n      });\n    },\n    realLabels() {\n      return this.$t(\"component.blockList.label\").filter((item, index) => {\n        return !this.hideIndex.includes(index);\n      });\n    },\n    mbColumns() {\n      return this.realColumns\n        .map((item, index) => {\n          return {\n            ...item,\n            title: this.realLabels[index]\n          };\n        })\n        .filter(item => {\n          return !item.hideInMobile;\n        });\n    }\n  },\n  methods: {\n    handleSizeChange(v) {\n      this.option.count = v;\n    },\n    handlePageChange(v) {\n      this.option.begindex = (v - 1) * this.option.count;\n    },\n    async getBlockByHeight() {\n      try {\n        this.loading = true;\n        let data = await getBlockByHeight({\n          height: this.height\n        });\n        const blockData = data.blocks.map(item => {\n          const { height } = item;\n          return {\n            height\n          };\n        });\n        this.total = blockData.length;\n        this.blockData = blockData;\n      } catch (e) {\n        if (e) {\n          this.loading = false;\n        }\n      }\n    },\n    async getBlockByMiner() {\n      try {\n        this.loading = true;\n\n        let data = await getBlocksByMiner(this.option);\n        const dataSource = data.blocks.map(item => {\n          const { block_header, size, reward, cid, msg_cids } = item;\n          const { height, timestamp, miner } = block_header;\n          return {\n            height,\n            hash: cid,\n            time: this.formatTime(timestamp),\n            mes: msg_cids.length,\n            size,\n            miner,\n            reward\n          };\n        });\n        this.blockData = Object.freeze(dataSource);\n        this.total = Number(data.total);\n        this.filTotal = Number(data.total_fil);\n        this.loading = false;\n      } catch (e) {\n        if (e) {\n          this.loading = false;\n        }\n      }\n    }\n  },\n  mounted() {\n    //this.getBlockByMiner();\n  },\n  watch: {\n    height: {\n      immediate: true,\n      handler(v) {\n        if (v) {\n          this.getBlockByHeight();\n        }\n      }\n    },\n    option: {\n      deep: true,\n      immediate: true,\n      handler() {\n        this.getBlockByMiner();\n      }\n    },\n    miners() {\n      this.option = {\n        begindex: \"0\",\n        count: \"25\",\n        miners: this.miners\n      };\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.block-list {\n  .total-number {\n    height: 80px;\n    align-items: center;\n    padding: 0 100px;\n    display: flex;\n    background: var(--board-bg-color);\n    color: var(--main-text-color);\n    & ::v-deep > span {\n      margin-right: auto;\n      i {\n        color: var(--link-color);\n        font-size: 22px;\n      }\n    }\n    .el-dropdown-link {\n      color: white;\n    }\n  }\n}\n</style>\n"]}]}