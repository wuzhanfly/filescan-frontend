{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/tipset/components/BlockList.vue?vue&type=style&index=0&id=3f000cf0&lang=scss&scoped=true&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/tipset/components/BlockList.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYmxvY2stbGlzdCB7CiAgYmFja2dyb3VuZDogdmFyKC0tYm9hcmQtYmctY29sb3IpOwogICYgOjp2LWRlZXAgLmxpc3QtdGl0bGUgewogICAgaGVpZ2h0OiA0MHB4OwogICAgY29sb3I6IHZhcigtLW1haW4tdGV4dC1jb2xvcik7CiAgfQogIC5saXN0LXRpdGxlIHsKICAgIGhlaWdodDogNjBweDsKICAgIGxpbmUtaGVpZ2h0OiA2MHB4OwogICAgcGFkZGluZy1sZWZ0OiAxMDBweDsKICAgIGZvbnQtc2l6ZTogMjBweDsKICB9Cn0K"},{"version":3,"sources":["BlockList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlockList.vue","sourceRoot":"src/views/tipset/components","sourcesContent":["<template>\n  <div class=\"block-list bottom-10 top-20\">\n    <base-table\n      :dataSource=\"list\"\n      :columns=\"columns\"\n      :labels=\"$t('component.blockList.label')\"\n      span\n      :spanMap=\"spanMap\"\n      :stripe=\"false\"\n    >\n      <div\n        slot=\"header\"\n        class=\"list-title border-bottom\"\n        v-if=\"$route.query.height\"\n      >\n        {{ $t(\"component.blockList.height\", { height }) }}\n      </div>\n    </base-table>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"BlockListCon\",\n  data() {\n    return {\n      loading: false,\n      dataSource: [],\n      heightMap: {},\n      columns: [\n        {\n          key: \"height\",\n          isLink: true,\n          target: \"tipset\"\n        },\n        {\n          key: \"hash\",\n          isLink: true,\n          target: \"tipset\",\n          ellipsis: true\n        },\n        {\n          key: \"timestamp\"\n        },\n        {\n          key: \"mesLength\"\n        },\n        {\n          key: \"size\",\n          unit: \"bytes\"\n        },\n        {\n          key: \"miner\",\n          isLink: true,\n          target: \"address/detail\",\n          paramKey: \"address\"\n        },\n        {\n          key: \"reward\",\n          unit: \"FIL\"\n        }\n      ]\n    };\n  },\n  props: {\n    height: {\n      type: Number,\n      default: 0\n    },\n    list: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    spanMap() {\n      const heightMap = {};\n      let res = {};\n      this.list.forEach((item, index) => {\n        if (heightMap[item.height]) {\n          heightMap[item.height].span++;\n        } else {\n          heightMap[item.height] = {\n            span: 1,\n            index: index\n          };\n        }\n      });\n      Object.values(heightMap).forEach(item => {\n        res[item.index] = item.span;\n      });\n      return res;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.block-list {\n  background: var(--board-bg-color);\n  & ::v-deep .list-title {\n    height: 40px;\n    color: var(--main-text-color);\n  }\n  .list-title {\n    height: 60px;\n    line-height: 60px;\n    padding-left: 100px;\n    font-size: 20px;\n  }\n}\n</style>\n"]}]}