{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/home/components/chart/BlockSizeChart.vue?vue&type=style&index=0&id=72d93704&lang=scss&scoped=true&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/home/components/chart/BlockSizeChart.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJsb2NrLXNpemUtY2hhcnQgewogIGRpc3BsYXk6IGZsZXg7CiAgLnNpemUtaW5mby1jb24gewogICAgbWluLXdpZHRoOiAyMDBweDsKICAgIGRpdjpsYXN0LWNoaWxkIHsKICAgICAgZm9udC1zaXplOiAyNnB4OwogICAgICBjb2xvcjogdmFyKC0tYmxvY2stc2l6ZS1jb2xvcik7CiAgICAgIG1hcmdpbi10b3A6IDVweDsKICAgIH0KICAgIGRpdjpmaXJzdC1jaGlsZCB7CiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICBoZWlnaHQ6IDMwcHg7CiAgICAgIGNvbG9yOiB2YXIoLS10b3RhbC1ib2FyZC10b3AtY29sb3IpOwogICAgICAmOjpiZWZvcmUgewogICAgICAgIGNvbnRlbnQ6ICIiOwogICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICB3aWR0aDogMTJweDsKICAgICAgICBoZWlnaHQ6IDEycHg7CiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tYmxvY2stc2l6ZS1jb2xvcik7CiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICAgIG1hcmdpbi1yaWdodDogNXB4OwogICAgICB9CiAgICB9CiAgfQogIC5jaGFydC1jb24gewogICAgZmxleDogMTsKICAgIGhlaWdodDogMTAwJTsKICB9CiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7CiAgICAuc2l6ZS1pbmZvLWNvbiB7CiAgICAgIGZsZXg6IDI7CiAgICB9CiAgICAuc2l6ZS1pbmZvLWNvbiA+IGRpdjpsYXN0LWNoaWxkIHsKICAgICAgbWFyZ2luLXRvcDogMjVweCAhaW1wb3J0YW50OwogICAgICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDsKICAgIH0KICAgIC5zaXplLWluZm8tY29uID4gZGl2OmZpcnN0LWNoaWxkOjpiZWZvcmUgewogICAgICB3aWR0aDogNnB4OwogICAgICBoZWlnaHQ6IDZweDsKICAgIH0KICAgIGJveC1zaGFkb3c6IDBweCAycHggNHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDMpOwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogICAgLmNoYXJ0LWNvbiB7CiAgICAgIGZsZXg6IDM7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["BlockSizeChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlockSizeChart.vue","sourceRoot":"src/views/home/components/chart","sourcesContent":["<template>\n  <div\n    class=\"block-size-chart\"\n    v-loading=\"loading\"\n    element-loading-background=\"var(--board-bg-color)\"\n  >\n    <div class=\"size-info-con\">\n      <div class=\"top-30\">\n        {{ $t(\"home.blockSize.label\") }}\n        <el-popover\n          placement=\"bottom-start\"\n          width=\"200\"\n          trigger=\"hover\"\n          :content=\"$t('home.blockSize.tips')\"\n        >\n          <i class=\"el-icon-warning-outline\" slot=\"reference\"></i>\n        </el-popover>\n      </div>\n      <div v-show=\"!loading\">\n        {{ $t(\"home.blockSize.size\", { avg: avgSize }) }}\n      </div>\n    </div>\n    <div class=\"chart-con\" ref=\"size\"></div>\n  </div>\n</template>\n<script>\nimport { getBlocSizeData } from \"@/api/home\";\nimport dayjs from \"dayjs\";\nlet chart;\nexport default {\n  name: \"BlockSizeChart\",\n  data() {\n    return {\n      dataList: [],\n      avgSize: 0,\n      loading: false\n    };\n  },\n  methods: {\n    drawSizeChart() {\n      const data = this.dataList;\n      const {\n        axisLine,\n        seriesItem,\n        seriesMarkLine\n      } = this.chartTheme.blockSize;\n      const vm = this;\n      const option = {\n        xAxis: {\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: axisLine\n            }\n          },\n          axisTick: {\n            show: false\n          }\n        },\n        yAxis: {\n          show: false\n        },\n        grid: {\n          left: 0,\n          top: 0,\n          bottom: 10,\n          right: 0\n        },\n        tooltip: {\n          formatter: function(p) {\n            const html = vm.$t(\"chart.blockSize\", {\n              value: p.data.formatValue,\n              name: p.name\n            });\n            return html;\n          }\n        },\n        series: [\n          {\n            type: \"bar\",\n            itemStyle: {\n              normal: {\n                color: seriesItem\n              }\n            },\n            data: data,\n            markLine: {\n              silent: true,\n              label: {\n                show: false\n              },\n              lineStyle: {\n                color: seriesMarkLine\n              },\n              symbol: \"none\",\n              data: [\n                {\n                  type: \"average\"\n                }\n              ]\n            }\n          }\n        ]\n      };\n      chart.setOption(option);\n    },\n    async getBlockSizeData() {\n      try {\n        this.loading = true;\n        const res = await getBlocSizeData(this.time);\n        this.loading = false;\n        const { data, avg_blocksize } = res;\n        const dataList = data.map(item => {\n          const end = dayjs(item.time * 1000)\n            .add(1, \"hour\")\n            .format(\"HH:mm\");\n          return {\n            name: `${this.formatTimeByStr(\n              item.time * 1000,\n              \"MMM Do YYYY HH:mm\"\n            )}-${end}`,\n            formatValue: this.formatNumber(item.block_size),\n            value: item.block_size\n          };\n        });\n        this.dataList = Object.freeze(dataList);\n        this.avgSize = this.formatNumber(avg_blocksize);\n        this.drawSizeChart();\n      } catch (e) {\n        this.loading = false;\n      }\n    }\n  },\n  props: {\n    time: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  mounted() {\n    chart = this.$chart.init(this.$refs.size);\n    this.getBlockSizeData();\n  },\n  watch: {\n    latestBlockHeight() {\n      if (this.loadCount === 1) {\n        return;\n      }\n      this.getBlockSizeData();\n    },\n    theme() {\n      this.drawSizeChart();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.block-size-chart {\n  display: flex;\n  .size-info-con {\n    min-width: 200px;\n    div:last-child {\n      font-size: 26px;\n      color: var(--block-size-color);\n      margin-top: 5px;\n    }\n    div:first-child {\n      font-weight: bold;\n      height: 30px;\n      color: var(--total-board-top-color);\n      &::before {\n        content: \"\";\n        display: inline-block;\n        width: 12px;\n        height: 12px;\n        background: var(--block-size-color);\n        border-radius: 50%;\n        margin-right: 5px;\n      }\n    }\n  }\n  .chart-con {\n    flex: 1;\n    height: 100%;\n  }\n  @media (max-width: 768px) {\n    .size-info-con {\n      flex: 2;\n    }\n    .size-info-con > div:last-child {\n      margin-top: 25px !important;\n      font-size: 12px !important;\n    }\n    .size-info-con > div:first-child::before {\n      width: 6px;\n      height: 6px;\n    }\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.03);\n    border-radius: 4px;\n    .chart-con {\n      flex: 3;\n    }\n  }\n}\n</style>\n"]}]}