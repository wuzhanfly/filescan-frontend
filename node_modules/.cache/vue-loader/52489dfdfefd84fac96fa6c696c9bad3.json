{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/mining/MinerList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/mining/MinerList.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHNlYXJjaE1pbmVyLCBnZXRNaW5lckxpc3QgfSBmcm9tICJAL2FwaS9zdGF0cyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWluZXJMaXN0IiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YVNvdXJjZTogW10sCiAgICAgIGNvbHVtbnM6IFsKICAgICAgICB7CiAgICAgICAgICBrZXk6ICJtaW5lciIsCiAgICAgICAgICBpc0xpbms6IHRydWUsCiAgICAgICAgICBlbGxpcHNpczogdHJ1ZSwKICAgICAgICAgIHRhcmdldDogImFkZHJlc3MvZGV0YWlsIiwKICAgICAgICAgIHBhcmFtS2V5OiAiYWRkcmVzcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGtleTogInBpZCIsCiAgICAgICAgICBpc0xpbms6IHRydWUsCiAgICAgICAgICBlbGxpcHNpczogdHJ1ZSwKICAgICAgICAgIHRhcmdldDogInN0YXRzL3BlZXIiLAogICAgICAgICAgcGFyYW1LZXk6ICJwZWVyX2lkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAga2V5OiAicG93ZXIiLAogICAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGtleTogInByYXRlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAga2V5OiAiYmxvY2siLAogICAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGtleTogImJyYXRlIgogICAgICAgIH0KICAgICAgXSwKICAgICAgb2Zmc2V0OiAwLAogICAgICBsaW1pdDogMjUsCiAgICAgIHRvdGFsOiAwLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgc2VhcmNoTG9hZGluZzogZmFsc2UsCiAgICAgIHNvcnRLZXk6ICJibG9jayIsCiAgICAgIHNvcnRUeXBlOiAtMSwKICAgICAga2V5OiAiIiwKICAgICAgc3RhcnQ6IG51bGwsCiAgICAgIGFjdGl2ZUluZGV4OiA0CiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuc3RhcnQgPSAwOwogICAgdGhpcy5nZXRTb3J0ZWRNaW5lcigwKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZVNpemVDaGFuZ2UodikgewogICAgICB0aGlzLmxpbWl0ID0gdjsKICAgIH0sCiAgICBoYW5kbGVQYWdlQ2hhbmdlKHYpIHsKICAgICAgdGhpcy5vZmZzZXQgPSAodiAtIDEpICogdGhpcy5saW1pdDsKICAgIH0sCiAgICBhc3luYyBnZXRTb3J0ZWRNaW5lcih0aW1lX3N0YXJ0KSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICBjb25zdCBkYXRhTGFiZWwgPSB0aGlzLiR0KCJzdGF0cy5taW5pbmcubWluZXJMaXN0LmRldGFpbCIpOwogICAgICAgIGxldCByZXM7CiAgICAgICAgaWYgKHRpbWVfc3RhcnQgPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICB0aW1lX3N0YXJ0ID0gdGhpcy5ub3cgLSA4NjQwMDsKICAgICAgICB9CiAgICAgICAgbGV0IHBhcmFtID0gewogICAgICAgICAgdGltZV9lbmQ6IHRoaXMubm93LAogICAgICAgICAgdGltZV9zdGFydCwKICAgICAgICAgIG9mZnNldDogdGhpcy5vZmZzZXQsCiAgICAgICAgICBsaW1pdDogdGhpcy5saW1pdCwKICAgICAgICAgIHNvcnQ6IHRoaXMuc29ydEtleSwKICAgICAgICAgIHNvcnRfdHlwZTogdGhpcy5zb3J0VHlwZQogICAgICAgIH07CiAgICAgICAgcmVzID0gYXdhaXQgZ2V0TWluZXJMaXN0KHBhcmFtKTsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICB0aGlzLnRvdGFsID0gTnVtYmVyKHJlcy5taWVucl9jb3VudCk7CiAgICAgICAgY29uc3QgZGF0YVNvdXJjZSA9IHJlcy5taW5lcnMubWFwKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgY29uc3QgewogICAgICAgICAgICBpbmNyZWFzZWRfcG93ZXIsCiAgICAgICAgICAgIGluY3JlYXNlZF9ibG9jaywKICAgICAgICAgICAgcG93ZXJfcGVyY2VudCwKICAgICAgICAgICAgYmxvY2tfcGVyY2VudCwKICAgICAgICAgICAgcGVlcl9pZCwKICAgICAgICAgICAgbWluZXIKICAgICAgICAgIH0gPSBpdGVtOwogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbWluZXIsCiAgICAgICAgICAgIHBpZDogcGVlcl9pZCwKICAgICAgICAgICAgcG93ZXI6IHRoaXMudW5pdENvbnZlcnNpb24oaW5jcmVhc2VkX3Bvd2VyKSwKICAgICAgICAgICAgYmxvY2s6IGluY3JlYXNlZF9ibG9jayB8fCAiIiwKICAgICAgICAgICAgYnJhdGU6IGJsb2NrX3BlcmNlbnQsCiAgICAgICAgICAgIHByYXRlOiBwb3dlcl9wZXJjZW50LAogICAgICAgICAgICBpbmRleCwKICAgICAgICAgICAgZGF0YUxpc3Q6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB2YWx1ZTogcGVlcl9pZAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgeyB2YWx1ZTogIiIgfSwKICAgICAgICAgICAgICB7IHZhbHVlOiAiIiB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGRhdGFMYWJlbDogZGF0YUxhYmVsCiAgICAgICAgICB9OwogICAgICAgIH0pOwogICAgICAgIHRoaXMuZGF0YVNvdXJjZSA9IE9iamVjdC5mcmVlemUoZGF0YVNvdXJjZSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIHNlYXJjaE1pbmVyKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IGRhdGFMYWJlbCA9IHRoaXMuJHQoInN0YXRzLm1pbmluZy5taW5lckxpc3QuZGV0YWlsIik7CiAgICAgICAgdGhpcy5zZWFyY2hMb2FkaW5nID0gdHJ1ZTsKICAgICAgICBsZXQgcmVzID0gYXdhaXQgc2VhcmNoTWluZXIoewogICAgICAgICAgbWluZXI6IHRoaXMua2V5CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5zZWFyY2hMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgaWYgKCFyZXMubWluZXJzKSB7CiAgICAgICAgICB0aGlzLmRhdGFTb3VyY2UgPSBbXTsKICAgICAgICAgIHRoaXMudG90YWwgPSAwOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICB0aGlzLmRhdGFTb3VyY2UgPSByZXMubWluZXJzLm1hcChpdGVtID0+IHsKICAgICAgICAgIGNvbnN0IHsKICAgICAgICAgICAgaW5jcmVhc2VkX3Bvd2VyLAogICAgICAgICAgICBpbmNyZWFzZWRfYmxvY2ssCiAgICAgICAgICAgIHBvd2VyX3BlcmNlbnQsCiAgICAgICAgICAgIGJsb2NrX3BlcmNlbnQsCiAgICAgICAgICAgIHBlZXJfaWQsCiAgICAgICAgICAgIG1pbmVyCiAgICAgICAgICB9ID0gaXRlbTsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIG1pbmVyLAogICAgICAgICAgICBwaWQ6IHBlZXJfaWQsCiAgICAgICAgICAgIHBvd2VyOiB0aGlzLnVuaXRDb252ZXJzaW9uKGluY3JlYXNlZF9wb3dlciksCiAgICAgICAgICAgIGJsb2NrOiBpbmNyZWFzZWRfYmxvY2sgfHwgIiIsCiAgICAgICAgICAgIGJyYXRlOiBibG9ja19wZXJjZW50LAogICAgICAgICAgICBwcmF0ZTogcG93ZXJfcGVyY2VudCwKICAgICAgICAgICAgZGF0YUxpc3Q6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB2YWx1ZTogcGVlcl9pZAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgeyB2YWx1ZTogIiIgfSwKICAgICAgICAgICAgICB7IHZhbHVlOiAiIiB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGRhdGFMYWJlbDogZGF0YUxhYmVsCiAgICAgICAgICB9OwogICAgICAgIH0pOwogICAgICAgIHRoaXMudG90YWwgPSAxOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgdGhpcy5zZWFyY2hMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVUaW1lQ2hhbmdlKHYpIHsKICAgICAgdGhpcy5vZmZzZXQgPSAwOwogICAgICB0aGlzLmxpbWl0ID0gMjU7CiAgICAgIHRoaXMuc3RhcnQgPSB2LnRpbWVfc3RhcnQ7CiAgICB9LAogICAgaGFuZGxlU2VhcmNoKGUpIHsKICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8KICAgICAgdGhpcy5rZXkgPSB0aGlzLmtleS5yZXBsYWNlKC9bXggwLTlhLXpBLVpdL2csICIiKTsKICAgICAgaWYgKChlLnR5cGUgPT09ICJrZXl1cCIgJiYgZS5rZXlDb2RlICE9PSAxMykgfHwgIXRoaXMua2V5KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMuc2VhcmNoTWluZXIoKTsKICAgIH0sCiAgICBoYW5kbGVDbGVhcigpIHsKICAgICAgdGhpcy5nZXRTb3J0ZWRNaW5lcigpOwogICAgfSwKICAgIGhhbmRsZVNvcnRDaGFuZ2UocCkgewogICAgICBjb25zdCB7IHByb3AsIG9yZGVyIH0gPSBwOwogICAgICB0aGlzLnNvcnRLZXkgPSBwcm9wOwogICAgICB0aGlzLnNvcnRUeXBlID0gb3JkZXIgPT09ICJkZXNjZW5kaW5nIiA/IC0xIDogMTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBvZmZzZXQoKSB7CiAgICAgIHRoaXMuZ2V0U29ydGVkTWluZXIodGhpcy5zdGFydCk7CiAgICB9LAogICAgbGltaXQoKSB7CiAgICAgIHRoaXMuZ2V0U29ydGVkTWluZXIodGhpcy5zdGFydCk7CiAgICB9LAogICAgc3RhcnQodikgewogICAgICB0aGlzLmdldFNvcnRlZE1pbmVyKHYpOwogICAgfSwKICAgIHNvcnRLZXkoKSB7CiAgICAgIHRoaXMuZ2V0U29ydGVkTWluZXIodGhpcy5zdGFydCk7CiAgICB9LAogICAgc29ydFR5cGUoKSB7CiAgICAgIHRoaXMuZ2V0U29ydGVkTWluZXIodGhpcy5zdGFydCk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["MinerList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"MinerList.vue","sourceRoot":"src/views/stats/components/mining","sourcesContent":["<template>\n  <div class=\"miner-list\">\n    <div class=\"title bottom-10\">{{ $t(\"stats.mining.minerList.title\") }}</div>\n    <time-selector\n      @time-select=\"handleTimeChange\"\n      :activeIndex.sync=\"activeIndex\"\n    >\n      <el-input\n        :placeholder=\"$t('stats.mining.minerList.placeholder')\"\n        slot=\"left\"\n        @keyup.native=\"handleSearch\"\n        v-model=\"key\"\n        clearable\n        :suffix-icon=\"searchLoading ? 'el-icon-loading' : ''\"\n        @clear=\"handleClear\"\n        :class=\"['search', theme === 'light' ? 'light' : 'dark']\"\n      >\n        <el-button\n          slot=\"append\"\n          icon=\"el-icon-search\"\n          @click.native=\"handleSearch\"\n        ></el-button>\n      </el-input>\n    </time-selector>\n    <base-table\n      :dataSource=\"dataSource\"\n      :columns=\"columns\"\n      :labels=\"$t('stats.mining.minerList.label')\"\n      :expand=\"!isMobile\"\n      :total=\"total\"\n      :showLoading=\"loading\"\n      showPagination\n      @size-change=\"handleSizeChange\"\n      @page-change=\"handlePageChange\"\n      @sort-change=\"handleSortChange\"\n      :defaultSort=\"{ prop: 'block', order: 'descending' }\"\n    ></base-table>\n  </div>\n</template>\n<script>\nimport { searchMiner, getMinerList } from \"@/api/stats\";\nexport default {\n  name: \"MinerList\",\n  data() {\n    return {\n      dataSource: [],\n      columns: [\n        {\n          key: \"miner\",\n          isLink: true,\n          ellipsis: true,\n          target: \"address/detail\",\n          paramKey: \"address\"\n        },\n        {\n          key: \"pid\",\n          isLink: true,\n          ellipsis: true,\n          target: \"stats/peer\",\n          paramKey: \"peer_id\"\n        },\n        {\n          key: \"power\",\n          sortable: true\n        },\n        {\n          key: \"prate\"\n        },\n        {\n          key: \"block\",\n          sortable: true\n        },\n        {\n          key: \"brate\"\n        }\n      ],\n      offset: 0,\n      limit: 25,\n      total: 0,\n      loading: false,\n      searchLoading: false,\n      sortKey: \"block\",\n      sortType: -1,\n      key: \"\",\n      start: null,\n      activeIndex: 4\n    };\n  },\n  mounted() {\n    this.start = 0;\n    this.getSortedMiner(0);\n  },\n  methods: {\n    handleSizeChange(v) {\n      this.limit = v;\n    },\n    handlePageChange(v) {\n      this.offset = (v - 1) * this.limit;\n    },\n    async getSortedMiner(time_start) {\n      try {\n        this.loading = true;\n        const dataLabel = this.$t(\"stats.mining.minerList.detail\");\n        let res;\n        if (time_start == undefined) {\n          time_start = this.now - 86400;\n        }\n        let param = {\n          time_end: this.now,\n          time_start,\n          offset: this.offset,\n          limit: this.limit,\n          sort: this.sortKey,\n          sort_type: this.sortType\n        };\n        res = await getMinerList(param);\n        this.loading = false;\n        this.total = Number(res.mienr_count);\n        const dataSource = res.miners.map((item, index) => {\n          const {\n            increased_power,\n            increased_block,\n            power_percent,\n            block_percent,\n            peer_id,\n            miner\n          } = item;\n          return {\n            miner,\n            pid: peer_id,\n            power: this.unitConversion(increased_power),\n            block: increased_block || \"\",\n            brate: block_percent,\n            prate: power_percent,\n            index,\n            dataList: [\n              {\n                value: peer_id\n              },\n              { value: \"\" },\n              { value: \"\" }\n            ],\n            dataLabel: dataLabel\n          };\n        });\n        this.dataSource = Object.freeze(dataSource);\n      } catch (e) {\n        this.loading = false;\n      }\n    },\n    async searchMiner() {\n      try {\n        const dataLabel = this.$t(\"stats.mining.minerList.detail\");\n        this.searchLoading = true;\n        let res = await searchMiner({\n          miner: this.key\n        });\n        this.searchLoading = false;\n        if (!res.miners) {\n          this.dataSource = [];\n          this.total = 0;\n          return;\n        }\n        this.dataSource = res.miners.map(item => {\n          const {\n            increased_power,\n            increased_block,\n            power_percent,\n            block_percent,\n            peer_id,\n            miner\n          } = item;\n          return {\n            miner,\n            pid: peer_id,\n            power: this.unitConversion(increased_power),\n            block: increased_block || \"\",\n            brate: block_percent,\n            prate: power_percent,\n            dataList: [\n              {\n                value: peer_id\n              },\n              { value: \"\" },\n              { value: \"\" }\n            ],\n            dataLabel: dataLabel\n          };\n        });\n        this.total = 1;\n      } catch (e) {\n        this.searchLoading = false;\n      }\n    },\n    handleTimeChange(v) {\n      this.offset = 0;\n      this.limit = 25;\n      this.start = v.time_start;\n    },\n    handleSearch(e) {\n      /* eslint-disable */\n      this.key = this.key.replace(/[^\b0-9a-zA-Z]/g, \"\");\n      if ((e.type === \"keyup\" && e.keyCode !== 13) || !this.key) {\n        return;\n      }\n      this.searchMiner();\n    },\n    handleClear() {\n      this.getSortedMiner();\n    },\n    handleSortChange(p) {\n      const { prop, order } = p;\n      this.sortKey = prop;\n      this.sortType = order === \"descending\" ? -1 : 1;\n    }\n  },\n  watch: {\n    offset() {\n      this.getSortedMiner(this.start);\n    },\n    limit() {\n      this.getSortedMiner(this.start);\n    },\n    start(v) {\n      this.getSortedMiner(v);\n    },\n    sortKey() {\n      this.getSortedMiner(this.start);\n    },\n    sortType() {\n      this.getSortedMiner(this.start);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.miner-list {\n  background: var(--board-bg-color);\n  .title {\n    padding-left: 30px;\n    font-weight: bold;\n    padding-top: 20px;\n    font-size: 20px;\n    color: var(--main-text-color);\n  }\n  & ::v-deep .el-input.search {\n    width: 400px;\n    input {\n      background: var(--board-bg-color);\n      color: var(--main-text-color);\n    }\n    .el-input-group__append {\n      background: var(--board-bg-color) !important;\n      color: var(--main-text-color) !important;\n    }\n    &.dark input {\n      background: var(--main-bg-color);\n      border-color: transparent;\n      border-right-color: var(--board-bg-color)\n\n    }\n    &.dark .el-input-group__append {\n      background: var(--main-bg-color) !important;\n      border-color: transparent;\n    }\n  }\n  @media (max-width: 768px) {\n    & ::v-deep .el-table {\n      .cell {\n        height: 20px !important;\n        line-height: 20px !important;\n        font-size: 12px;\n      }\n      .el-table__expand-icon i {\n        font-size: 12px;\n        line-height: 20px !important;\n      }\n    }\n    & ::v-deep .el-input.search input {\n      font-size: 12px;\n      height: 20px;\n      width: 45vw;\n      border-radius: 4px;\n    }\n  }\n}\n</style>\n"]}]}