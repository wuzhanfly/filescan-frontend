{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/mining/MinerList.vue?vue&type=style&index=0&id=5ca766dd&lang=scss&scoped=true&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/mining/MinerList.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWluZXItbGlzdCB7CiAgYmFja2dyb3VuZDogdmFyKC0tYm9hcmQtYmctY29sb3IpOwogIC50aXRsZSB7CiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIHBhZGRpbmctdG9wOiAyMHB4OwogICAgZm9udC1zaXplOiAyMHB4OwogICAgY29sb3I6IHZhcigtLW1haW4tdGV4dC1jb2xvcik7CiAgfQogICYgOjp2LWRlZXAgLmVsLWlucHV0LnNlYXJjaCB7CiAgICB3aWR0aDogNDAwcHg7CiAgICBpbnB1dCB7CiAgICAgIGJhY2tncm91bmQ6IHZhcigtLWJvYXJkLWJnLWNvbG9yKTsKICAgICAgY29sb3I6IHZhcigtLW1haW4tdGV4dC1jb2xvcik7CiAgICB9CiAgICAuZWwtaW5wdXQtZ3JvdXBfX2FwcGVuZCB7CiAgICAgIGJhY2tncm91bmQ6IHZhcigtLWJvYXJkLWJnLWNvbG9yKSAhaW1wb3J0YW50OwogICAgICBjb2xvcjogdmFyKC0tbWFpbi10ZXh0LWNvbG9yKSAhaW1wb3J0YW50OwogICAgfQogICAgJi5kYXJrIGlucHV0IHsKICAgICAgYmFja2dyb3VuZDogdmFyKC0tbWFpbi1iZy1jb2xvcik7CiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogdmFyKC0tYm9hcmQtYmctY29sb3IpCgogICAgfQogICAgJi5kYXJrIC5lbC1pbnB1dC1ncm91cF9fYXBwZW5kIHsKICAgICAgYmFja2dyb3VuZDogdmFyKC0tbWFpbi1iZy1jb2xvcikgIWltcG9ydGFudDsKICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsKICAgIH0KICB9CiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7CiAgICAmIDo6di1kZWVwIC5lbC10YWJsZSB7CiAgICAgIC5jZWxsIHsKICAgICAgICBoZWlnaHQ6IDIwcHggIWltcG9ydGFudDsKICAgICAgICBsaW5lLWhlaWdodDogMjBweCAhaW1wb3J0YW50OwogICAgICAgIGZvbnQtc2l6ZTogMTJweDsKICAgICAgfQogICAgICAuZWwtdGFibGVfX2V4cGFuZC1pY29uIGkgewogICAgICAgIGZvbnQtc2l6ZTogMTJweDsKICAgICAgICBsaW5lLWhlaWdodDogMjBweCAhaW1wb3J0YW50OwogICAgICB9CiAgICB9CiAgICAmIDo6di1kZWVwIC5lbC1pbnB1dC5zZWFyY2ggaW5wdXQgewogICAgICBmb250LXNpemU6IDEycHg7CiAgICAgIGhlaWdodDogMjBweDsKICAgICAgd2lkdGg6IDQ1dnc7CiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["MinerList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MinerList.vue","sourceRoot":"src/views/stats/components/mining","sourcesContent":["<template>\n  <div class=\"miner-list\">\n    <div class=\"title bottom-10\">{{ $t(\"stats.mining.minerList.title\") }}</div>\n    <time-selector\n      @time-select=\"handleTimeChange\"\n      :activeIndex.sync=\"activeIndex\"\n    >\n      <el-input\n        :placeholder=\"$t('stats.mining.minerList.placeholder')\"\n        slot=\"left\"\n        @keyup.native=\"handleSearch\"\n        v-model=\"key\"\n        clearable\n        :suffix-icon=\"searchLoading ? 'el-icon-loading' : ''\"\n        @clear=\"handleClear\"\n        :class=\"['search', theme === 'light' ? 'light' : 'dark']\"\n      >\n        <el-button\n          slot=\"append\"\n          icon=\"el-icon-search\"\n          @click.native=\"handleSearch\"\n        ></el-button>\n      </el-input>\n    </time-selector>\n    <base-table\n      :dataSource=\"dataSource\"\n      :columns=\"columns\"\n      :labels=\"$t('stats.mining.minerList.label')\"\n      :expand=\"!isMobile\"\n      :total=\"total\"\n      :showLoading=\"loading\"\n      showPagination\n      @size-change=\"handleSizeChange\"\n      @page-change=\"handlePageChange\"\n      @sort-change=\"handleSortChange\"\n      :defaultSort=\"{ prop: 'block', order: 'descending' }\"\n    ></base-table>\n  </div>\n</template>\n<script>\nimport { searchMiner, getMinerList } from \"@/api/stats\";\nexport default {\n  name: \"MinerList\",\n  data() {\n    return {\n      dataSource: [],\n      columns: [\n        {\n          key: \"miner\",\n          isLink: true,\n          ellipsis: true,\n          target: \"address/detail\",\n          paramKey: \"address\"\n        },\n        {\n          key: \"pid\",\n          isLink: true,\n          ellipsis: true,\n          target: \"stats/peer\",\n          paramKey: \"peer_id\"\n        },\n        {\n          key: \"power\",\n          sortable: true\n        },\n        {\n          key: \"prate\"\n        },\n        {\n          key: \"block\",\n          sortable: true\n        },\n        {\n          key: \"brate\"\n        }\n      ],\n      offset: 0,\n      limit: 25,\n      total: 0,\n      loading: false,\n      searchLoading: false,\n      sortKey: \"block\",\n      sortType: -1,\n      key: \"\",\n      start: null,\n      activeIndex: 4\n    };\n  },\n  mounted() {\n    this.start = 0;\n    this.getSortedMiner(0);\n  },\n  methods: {\n    handleSizeChange(v) {\n      this.limit = v;\n    },\n    handlePageChange(v) {\n      this.offset = (v - 1) * this.limit;\n    },\n    async getSortedMiner(time_start) {\n      try {\n        this.loading = true;\n        const dataLabel = this.$t(\"stats.mining.minerList.detail\");\n        let res;\n        if (time_start == undefined) {\n          time_start = this.now - 86400;\n        }\n        let param = {\n          time_end: this.now,\n          time_start,\n          offset: this.offset,\n          limit: this.limit,\n          sort: this.sortKey,\n          sort_type: this.sortType\n        };\n        res = await getMinerList(param);\n        this.loading = false;\n        this.total = Number(res.mienr_count);\n        const dataSource = res.miners.map((item, index) => {\n          const {\n            increased_power,\n            increased_block,\n            power_percent,\n            block_percent,\n            peer_id,\n            miner\n          } = item;\n          return {\n            miner,\n            pid: peer_id,\n            power: this.unitConversion(increased_power),\n            block: increased_block || \"\",\n            brate: block_percent,\n            prate: power_percent,\n            index,\n            dataList: [\n              {\n                value: peer_id\n              },\n              { value: \"\" },\n              { value: \"\" }\n            ],\n            dataLabel: dataLabel\n          };\n        });\n        this.dataSource = Object.freeze(dataSource);\n      } catch (e) {\n        this.loading = false;\n      }\n    },\n    async searchMiner() {\n      try {\n        const dataLabel = this.$t(\"stats.mining.minerList.detail\");\n        this.searchLoading = true;\n        let res = await searchMiner({\n          miner: this.key\n        });\n        this.searchLoading = false;\n        if (!res.miners) {\n          this.dataSource = [];\n          this.total = 0;\n          return;\n        }\n        this.dataSource = res.miners.map(item => {\n          const {\n            increased_power,\n            increased_block,\n            power_percent,\n            block_percent,\n            peer_id,\n            miner\n          } = item;\n          return {\n            miner,\n            pid: peer_id,\n            power: this.unitConversion(increased_power),\n            block: increased_block || \"\",\n            brate: block_percent,\n            prate: power_percent,\n            dataList: [\n              {\n                value: peer_id\n              },\n              { value: \"\" },\n              { value: \"\" }\n            ],\n            dataLabel: dataLabel\n          };\n        });\n        this.total = 1;\n      } catch (e) {\n        this.searchLoading = false;\n      }\n    },\n    handleTimeChange(v) {\n      this.offset = 0;\n      this.limit = 25;\n      this.start = v.time_start;\n    },\n    handleSearch(e) {\n      /* eslint-disable */\n      this.key = this.key.replace(/[^\b0-9a-zA-Z]/g, \"\");\n      if ((e.type === \"keyup\" && e.keyCode !== 13) || !this.key) {\n        return;\n      }\n      this.searchMiner();\n    },\n    handleClear() {\n      this.getSortedMiner();\n    },\n    handleSortChange(p) {\n      const { prop, order } = p;\n      this.sortKey = prop;\n      this.sortType = order === \"descending\" ? -1 : 1;\n    }\n  },\n  watch: {\n    offset() {\n      this.getSortedMiner(this.start);\n    },\n    limit() {\n      this.getSortedMiner(this.start);\n    },\n    start(v) {\n      this.getSortedMiner(v);\n    },\n    sortKey() {\n      this.getSortedMiner(this.start);\n    },\n    sortType() {\n      this.getSortedMiner(this.start);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.miner-list {\n  background: var(--board-bg-color);\n  .title {\n    padding-left: 30px;\n    font-weight: bold;\n    padding-top: 20px;\n    font-size: 20px;\n    color: var(--main-text-color);\n  }\n  & ::v-deep .el-input.search {\n    width: 400px;\n    input {\n      background: var(--board-bg-color);\n      color: var(--main-text-color);\n    }\n    .el-input-group__append {\n      background: var(--board-bg-color) !important;\n      color: var(--main-text-color) !important;\n    }\n    &.dark input {\n      background: var(--main-bg-color);\n      border-color: transparent;\n      border-right-color: var(--board-bg-color)\n\n    }\n    &.dark .el-input-group__append {\n      background: var(--main-bg-color) !important;\n      border-color: transparent;\n    }\n  }\n  @media (max-width: 768px) {\n    & ::v-deep .el-table {\n      .cell {\n        height: 20px !important;\n        line-height: 20px !important;\n        font-size: 12px;\n      }\n      .el-table__expand-icon i {\n        font-size: 12px;\n        line-height: 20px !important;\n      }\n    }\n    & ::v-deep .el-input.search input {\n      font-size: 12px;\n      height: 20px;\n      width: 45vw;\n      border-radius: 4px;\n    }\n  }\n}\n</style>\n"]}]}