{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/home/components/chart/TotalPowerChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/home/components/chart/TotalPowerChart.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldFRvdGFsUG93ZXJEYXRhIH0gZnJvbSAiQC9hcGkvaG9tZSI7CmxldCBjaGFydDsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUb3RhbFBvd2VyQ2hhcnQiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhTGlzdDogW10sCiAgICAgIHRvdGFsUG93ZXI6IDAsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBzdG9yYWdlQ2FwYWNpdHk6IDAKICAgIH07CiAgfSwKICBwcm9wczogewogICAgdGltZTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBkcmF3UG93ZXJDaGFydCgpIHsKICAgICAgY29uc3Qgc2VyaWVzID0gdGhpcy5kYXRhTGlzdDsKICAgICAgY29uc3QgeyBheGlzTGluZSwgc2VyaWVzSXRlbSwgYXJlYSB9ID0gdGhpcy5jaGFydFRoZW1lLnRvdGFsUG93ZXI7CiAgICAgIGNvbnN0IHhEYXRhID0gc2VyaWVzLm1hcChpdGVtID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdmFsdWU6IGl0ZW0ubmFtZQogICAgICAgIH07CiAgICAgIH0pOwogICAgICBjb25zdCB2bSA9IHRoaXM7CiAgICAgIGNvbnN0IG9wdGlvbiA9IHsKICAgICAgICB4QXhpczogewogICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlLAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IGF4aXNMaW5lCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzVGljazogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IHhEYXRhCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogInZhbHVlIiwKICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAwLAogICAgICAgICAgdG9wOiAwLAogICAgICAgICAgcmlnaHQ6IDAsCiAgICAgICAgICBib3R0b206IDEwCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAiYXhpcyIsCgogICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbihwKSB7CiAgICAgICAgICAgIGNvbnN0IGh0bWwgPSB2bS4kdCgiY2hhcnQudG90YWxQb3dlciIsIHsKICAgICAgICAgICAgICB2YWx1ZTogdm0udW5pdENvbnZlcnNpb24ocFswXS5kYXRhLnZhbHVlLCAzKSwKICAgICAgICAgICAgICBuYW1lOiBwWzBdLmRhdGEubmFtZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmV0dXJuIGh0bWw7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgZGF0YTogc2VyaWVzLAogICAgICAgICAgICB0eXBlOiAibGluZSIsCiAgICAgICAgICAgIHN5bWJvbDogIm5vbmUiLAogICAgICAgICAgICBzbW9vdGg6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiBzZXJpZXNJdGVtCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGFyZWFTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiBhcmVhCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH07CiAgICAgIGNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgfSwKICAgIGFzeW5jIGdldFRvdGFsUG93ZXJEYXRhKCkgewogICAgICB0cnkgewogICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0VG90YWxQb3dlckRhdGEoewogICAgICAgICAgdGltZTogdGhpcy50aW1lLmVuZF90aW1lCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgY29uc3QgZGF0YUxpc3QgPSByZXMuZGF0YS5tYXAoaXRlbSA9PiB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBuYW1lOiB0aGlzLmZvcm1hdFRpbWVCeVN0cihpdGVtLnRpbWUgKiAxMDAwLCAiTU1NIERvIFlZWVkgSEg6bW0iKSwKICAgICAgICAgICAgdmFsdWU6IGl0ZW0ucG93ZXIKICAgICAgICAgIH07CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5zdG9yYWdlQ2FwYWNpdHkgPSB0aGlzLnVuaXRDb252ZXJzaW9uKHJlcy5zdG9yYWdlX2NhcGFjaXR5LCAzKTsKICAgICAgICB0aGlzLnRvdGFsUG93ZXIgPSB0aGlzLnVuaXRDb252ZXJzaW9uKGRhdGFMaXN0LnNsaWNlKC0xKVswXS52YWx1ZSwgMyk7CiAgICAgICAgdGhpcy5kYXRhTGlzdCA9IE9iamVjdC5mcmVlemUoZGF0YUxpc3QpOwogICAgICAgIHRoaXMuZHJhd1Bvd2VyQ2hhcnQoKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgY2hhcnQgPSB0aGlzLiRjaGFydC5pbml0KHRoaXMuJHJlZnMucG93ZXIpOwogICAgdGhpcy5nZXRUb3RhbFBvd2VyRGF0YSgpOwogIH0sCiAgd2F0Y2g6IHsKICAgIGxhdGVzdEJsb2NrSGVpZ2h0KCkgewogICAgICBpZiAodGhpcy5sb2FkQ291bnQgPT09IDEpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy5nZXRUb3RhbFBvd2VyRGF0YSgpOwogICAgfSwKICAgIHRoZW1lKCkgewogICAgICB0aGlzLmRyYXdQb3dlckNoYXJ0KCk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["TotalPowerChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"TotalPowerChart.vue","sourceRoot":"src/views/home/components/chart","sourcesContent":["<template>\n  <div\n    class=\"total-power-chart\"\n    v-loading=\"loading\"\n    element-loading-background=\"var(--board-bg-color)\"\n  >\n    <div class=\"info-con\">\n      <div class=\"power-info\">\n        <div>\n          {{ $t(\"home.totalPower.power\") }}\n        </div>\n        <div class=\"top-10 bottom-10\" v-show=\"!loading\">{{ totalPower }}</div>\n      </div>\n      <div class=\"storage-info\">\n        <div>\n          {{ $t(\"home.totalPower.capacity\") }}\n        </div>\n        <div class=\"top-10\" v-show=\"!loading\">{{ totalPower }}</div>\n      </div>\n    </div>\n    <div class=\"chart-con\" ref=\"power\"></div>\n  </div>\n</template>\n<script>\nimport { getTotalPowerData } from \"@/api/home\";\nlet chart;\nexport default {\n  name: \"TotalPowerChart\",\n  data() {\n    return {\n      dataList: [],\n      totalPower: 0,\n      loading: false,\n      storageCapacity: 0\n    };\n  },\n  props: {\n    time: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  methods: {\n    drawPowerChart() {\n      const series = this.dataList;\n      const { axisLine, seriesItem, area } = this.chartTheme.totalPower;\n      const xData = series.map(item => {\n        return {\n          value: item.name\n        };\n      });\n      const vm = this;\n      const option = {\n        xAxis: {\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: axisLine\n            }\n          },\n          axisLabel: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          data: xData\n        },\n        yAxis: {\n          type: \"value\",\n          show: false\n        },\n        grid: {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 10\n        },\n        tooltip: {\n          trigger: \"axis\",\n\n          formatter: function(p) {\n            const html = vm.$t(\"chart.totalPower\", {\n              value: vm.unitConversion(p[0].data.value, 3),\n              name: p[0].data.name\n            });\n            return html;\n          }\n        },\n        series: [\n          {\n            data: series,\n            type: \"line\",\n            symbol: \"none\",\n            smooth: true,\n            lineStyle: {\n              color: seriesItem\n            },\n            areaStyle: {\n              color: area\n            }\n          }\n        ]\n      };\n      chart.setOption(option);\n    },\n    async getTotalPowerData() {\n      try {\n        this.loading = true;\n        const res = await getTotalPowerData({\n          time: this.time.end_time\n        });\n        this.loading = false;\n        const dataList = res.data.map(item => {\n          return {\n            name: this.formatTimeByStr(item.time * 1000, \"MMM Do YYYY HH:mm\"),\n            value: item.power\n          };\n        });\n        this.storageCapacity = this.unitConversion(res.storage_capacity, 3);\n        this.totalPower = this.unitConversion(dataList.slice(-1)[0].value, 3);\n        this.dataList = Object.freeze(dataList);\n        this.drawPowerChart();\n      } catch (e) {\n        this.loading = false;\n      }\n    }\n  },\n  mounted() {\n    chart = this.$chart.init(this.$refs.power);\n    this.getTotalPowerData();\n  },\n  watch: {\n    latestBlockHeight() {\n      if (this.loadCount === 1) {\n        return;\n      }\n      this.getTotalPowerData();\n    },\n    theme() {\n      this.drawPowerChart();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.total-power-chart {\n  display: flex;\n\n  .info-con {\n    //flex: 2;\n    min-width: 180px;\n    display: flex;\n    flex-direction: column;\n    & > div {\n      div:last-child {\n        font-size: 26px;\n        color: var(--total-power-color);\n      }\n      div:first-child {\n        color: var(--total-board-top-color);\n        font-weight: bold;\n      }\n    }\n  }\n  .chart-con {\n    flex: 1;\n    height: 100%;\n  }\n  @media (max-width: 768px) {\n    .info-con .power-info,\n    .info-con .storage-info {\n      & > div:last-child {\n        margin-top: 5px !important;\n        font-size: 12px !important;\n      }\n    }\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.03);\n    border-radius: 4px;\n    .info-con {\n      flex: 2;\n    }\n    .chart-con {\n      flex: 3;\n    }\n  }\n}\n</style>\n"]}]}