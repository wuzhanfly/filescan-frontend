{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/metrics/FilecoinBlockChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/stats/components/metrics/FilecoinBlockChart.vue","mtime":1612684657988},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEJsb2NrUmV3YXJkIH0gZnJvbSAiQC9hcGkvdG9rZW4iOwppbXBvcnQgZGF5anMgZnJvbSAiZGF5anMiOwpsZXQgY2hhcnQ7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRmlsZWNvaW5CbG9ja0NoYXJ0IiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YUxpc3Q6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZHJhd0NoYXJ0KCkgewogICAgICBjb25zdCBudW1iZXJDb252ZXJzaW9uID0gdGhpcy5udW1iZXJDb252ZXJzaW9uOwogICAgICBjb25zdCByYXRlID0gdGhpcy5yYXRlOwogICAgICBjb25zdCB7IGFyZWEsIHNlcmllc0l0ZW0sIHNwbGl0TGluZSB9ID0gdGhpcy5jaGFydFRoZW1lLmZpbGVjb2luOwogICAgICBjb25zdCByZXdhcmQgPSB0aGlzLiR0KCJjaGFydC5maWxlY29pbiIpOwogICAgICBjb25zdCBkYXRhTGlzdCA9IHRoaXMuZGF0YUxpc3Q7CiAgICAgIGNvbnN0IHhEYXRhID0gZGF0YUxpc3QubWFwKGl0ZW0gPT4gewogICAgICAgIHJldHVybiBkYXlqcy51bml4KGl0ZW0ubmFtZSkuZm9ybWF0KCJNTU0gWVlZWSIpOwogICAgICB9KTsKICAgICAgY29uc3QgY29sb3IgPSB0aGlzLnRoZW1lID09PSAibGlnaHQiID8gImJsYWNrIiA6ICJ3aGl0ZSI7CiAgICAgIGNvbnN0IG9wdGlvbiA9IHsKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIGxlZnQ6IDMwICogcmF0ZSwKICAgICAgICAgIHNlbGVjdGVkTW9kZTogZmFsc2UsCiAgICAgICAgICBkYXRhOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiByZXdhcmQsCiAgICAgICAgICAgICAgaWNvbjogImNpcmNsZSIKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBmb250U2l6ZTogMTIgKiByYXRlLAogICAgICAgICAgICBjb2xvcgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogNTAgKiByYXRlCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAiYXhpcyIKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAiY2F0ZWdvcnkiLAogICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlLAogICAgICAgICAgZGF0YTogeERhdGEsCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgZm9udFNpemU6IDEyICogcmF0ZSwKICAgICAgICAgICAgICBjb2xvcgogICAgICAgICAgICB9LAogICAgICAgICAgICBtYXJnaW46IDIwCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogInZhbHVlIiwKICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICB0eXBlOiAiZGFzaGVkIiwKICAgICAgICAgICAgICBjb2xvcjogc3BsaXRMaW5lCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIGZvcm1hdHRlcih2KSB7CiAgICAgICAgICAgICAgcmV0dXJuIG51bWJlckNvbnZlcnNpb24odik7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGZvbnRTaXplOiAxMiAqIHJhdGUsCiAgICAgICAgICAgICAgY29sb3IKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIGRhdGE6IGRhdGFMaXN0LAogICAgICAgICAgICB0eXBlOiAibGluZSIsCiAgICAgICAgICAgIHNtb290aDogdHJ1ZSwKICAgICAgICAgICAgbmFtZTogcmV3YXJkLAogICAgICAgICAgICBzeW1ib2w6ICJub25lIiwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IHNlcmllc0l0ZW0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6IGFyZWEKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfTsKICAgICAgY2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9LAogICAgYXN5bmMgZ2V0QmxvY2tSZXdhcmQoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICBsZXQgcmVzID0gYXdhaXQgZ2V0QmxvY2tSZXdhcmQoewogICAgICAgICAgdGltZV9kaWZmOiA4NjQwMCAqIDMwLAogICAgICAgICAgcmVwZWF0ZTogMTIgKiAyOAogICAgICAgIH0pOwogICAgICAgIGNvbnN0IGRhdGFMaXN0ID0gcmVzLm1hcChpdGVtID0+IHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIG5hbWU6IGl0ZW0udGltZSwKICAgICAgICAgICAgdmFsdWU6IGl0ZW0uYmxvY2tfcmV3YXJkcwogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmRhdGFMaXN0ID0gT2JqZWN0LmZyZWV6ZShkYXRhTGlzdCk7CiAgICAgICAgdGhpcy5kcmF3Q2hhcnQoKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgY2hhcnQgPSB0aGlzLiRjaGFydC5pbml0KHRoaXMuJHJlZnMuY2hhcnQpOwogICAgdGhpcy5nZXRCbG9ja1Jld2FyZCgpOwogIH0sCiAgd2F0Y2g6IHsKICAgIHRoZW1lKCkgewogICAgICB0aGlzLmRyYXdDaGFydCgpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["FilecoinBlockChart.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FilecoinBlockChart.vue","sourceRoot":"src/views/stats/components/metrics","sourcesContent":["<template>\n  <div class=\"filecoin-block-chart\">\n    <div class=\"title\">{{ $t(\"stats.metrics.filecoin.title\") }}</div>\n    <div ref=\"chart\" class=\"chart-con\"></div>\n  </div>\n</template>\n<script>\nimport { getBlockReward } from \"@/api/token\";\nimport dayjs from \"dayjs\";\nlet chart;\nexport default {\n  name: \"FilecoinBlockChart\",\n  data() {\n    return {\n      dataList: []\n    };\n  },\n  methods: {\n    drawChart() {\n      const numberConversion = this.numberConversion;\n      const rate = this.rate;\n      const { area, seriesItem, splitLine } = this.chartTheme.filecoin;\n      const reward = this.$t(\"chart.filecoin\");\n      const dataList = this.dataList;\n      const xData = dataList.map(item => {\n        return dayjs.unix(item.name).format(\"MMM YYYY\");\n      });\n      const color = this.theme === \"light\" ? \"black\" : \"white\";\n      const option = {\n        legend: {\n          left: 30 * rate,\n          selectedMode: false,\n          data: [\n            {\n              name: reward,\n              icon: \"circle\"\n            }\n          ],\n          textStyle: {\n            fontSize: 12 * rate,\n            color\n          }\n        },\n        grid: {\n          left: 50 * rate\n        },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: xData,\n          axisLabel: {\n            textStyle: {\n              fontSize: 12 * rate,\n              color\n            },\n            margin: 20\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          splitLine: {\n            lineStyle: {\n              type: \"dashed\",\n              color: splitLine\n            }\n          },\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            formatter(v) {\n              return numberConversion(v);\n            },\n            textStyle: {\n              fontSize: 12 * rate,\n              color\n            }\n          }\n        },\n        series: [\n          {\n            data: dataList,\n            type: \"line\",\n            smooth: true,\n            name: reward,\n            symbol: \"none\",\n            itemStyle: {\n              color: seriesItem\n            },\n            areaStyle: {\n              color: area\n            }\n          }\n        ]\n      };\n      chart.setOption(option);\n    },\n    async getBlockReward() {\n      try {\n        this.loading = true;\n        let res = await getBlockReward({\n          time_diff: 86400 * 30,\n          repeate: 12 * 28\n        });\n        const dataList = res.map(item => {\n          return {\n            name: item.time,\n            value: item.block_rewards\n          };\n        });\n        this.dataList = Object.freeze(dataList);\n        this.drawChart();\n      } catch (e) {\n        this.loading = false;\n      }\n    }\n  },\n  mounted() {\n    chart = this.$chart.init(this.$refs.chart);\n    this.getBlockReward();\n  },\n  watch: {\n    theme() {\n      this.drawChart();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.filecoin-block-chart {\n  background: var(--board-bg-color);\n  border-radius: 8px;\n  box-shadow: 0px 1px 7px 9px rgba(0, 0, 0, 0.03);\n  .title {\n    height: 60px;\n    line-height: 60px;\n    padding-left: 30px;\n    font-size: 20px;\n    color: var(--main-text-color);\n  }\n  .chart-con {\n    height: 400px;\n  }\n  @media (max-width: 768px) {\n    .chart-con {\n      height: 200px;\n    }\n    margin: 10px 0;\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.03);\n    border-radius: 10px;\n    .title {\n      padding: 3.3vw 0 0 3.3vw;\n    }\n  }\n}\n</style>\n"]}]}