{"remainingRequest":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wuzhanfly/git/filscan-frontend/src/views/address/List.vue?vue&type=style&index=0&id=34783a93&lang=scss&scoped=true&","dependencies":[{"path":"/home/wuzhanfly/git/filscan-frontend/src/views/address/List.vue","mtime":1614156465619},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wuzhanfly/git/filscan-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hZGRyZXNzLWNvbiB7CiAgLnRvdGFsLW51bWJlciB7CiAgICBoZWlnaHQ6IDgwcHg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgcGFkZGluZzogMCA1NnB4OwogICAgZGlzcGxheTogZmxleDsKICAgIGJhY2tncm91bmQ6IHZhcigtLWJvYXJkLWJnLWNvbG9yKTsKICAgIGNvbG9yOiB2YXIoLS1tYWluLXRleHQtY29sb3IpOwogICAgJiA6OnYtZGVlcCA+IHNwYW4gewogICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgICAgIGkgewogICAgICAgIGNvbG9yOiB2YXIoLS1saW5rLWNvbG9yKTsKICAgICAgICBmb250LXNpemU6IDIycHg7CiAgICAgIH0KICAgIH0KICB9CiAgJiA6OnYtZGVlcCAuZWwtdGFibGUgewogICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMzAwcHgpICFpbXBvcnRhbnQ7CiAgfQogIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgewogICAgLnRvdGFsLW51bWJlciB7CiAgICAgIGhlaWdodDogMzBweDsKICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsKICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgICB9CiAgICBtaW4taGVpZ2h0OiBjYWxjKDEwMHZoIC0gOTBweCk7CiAgfQp9Cg=="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views/address","sourcesContent":["<template>\n  <div\n    class=\"address-con bottom-10\"\n    v-loading=\"loading\"\n    element-loading-background=\"var(--board-bg-color)\"\n  >\n    <div class=\"total-number border-bottom\">\n      <span\n        v-html=\"\n          $t('address.list.total', {\n            num: formatNumber(total),\n            filNum: filNum\n          })\n        \"\n      ></span>\n    </div>\n    <div class=\"address-list\" v-if=\"!isMobile\">\n      <div class=\"table-con\">\n        <base-table\n          :dataSource=\"addressData\"\n          :columns=\"columns\"\n          showPagination\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @page-change=\"handlePageChange\"\n          :labels=\"$t('address.list.label')\"\n        ></base-table>\n      </div>\n    </div>\n    <mb-board\n      v-for=\"item in addressData\"\n      :key=\"item.cid\"\n      :dataSource=\"item\"\n      :columns=\"mbColumns\"\n      v-else\n    />\n    <mb-page v-if=\"isMobile\" @page-change=\"handlePageChange\" :total=\"total\" />\n  </div>\n</template>\n<script>\nimport { getAccountList } from \"@/api/account\";\nimport mixin from \"./mixin\";\nexport default {\n  name: \"AddressList\",\n  mixins: [mixin],\n  data() {\n    return {\n      addressData: [],\n      loading: false,\n      total: 0,\n      filNum: 0,\n      columns: [\n        {\n          key: \"address\",\n          isLink: true,\n          target: \"address/detail\"\n        },\n        {\n          key: \"type\"\n        },\n        {\n          key: \"balance\",\n          unit: \"FIL\"\n        },\n        {\n          key: \"mes\"\n        }\n      ],\n      option: {\n        begindex: \"0\",\n        count: \"25\"\n      }\n    };\n  },\n  methods: {\n    handleSizeChange(v) {\n      this.option.count = v;\n    },\n    handlePageChange(v) {\n      this.option.begindex = (v - 1) * this.option.count;\n    },\n    async getAddressList() {\n      this.loading = true;\n      try {\n        let res = await getAccountList(this.option);\n        this.loading = false;\n        const { total, total_fil, accounts } = res;\n        const data = accounts.map(item => {\n          const detail = this.parseAddress(item);\n          return {\n            ...detail,\n            mes: this.formatNumber(item.Messages)\n          };\n        });\n        this.total = Number(total);\n        this.filNum = total_fil;\n        this.addressData = Object.freeze(data);\n      } catch (e) {\n        this.loading = false;\n      }\n    }\n  },\n  mounted() {\n    this.getAddressList();\n  },\n  watch: {\n    option: {\n      deep: true,\n      handler() {\n        this.getAddressList();\n      }\n    }\n  },\n  computed: {\n    mbColumns() {\n      const labels = this.$t(\"address.list.label\");\n      return this.columns.map((item, index) => {\n        return {\n          ...item,\n          title: labels[index]\n        };\n      });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.address-con {\n  .total-number {\n    height: 80px;\n    align-items: center;\n    padding: 0 56px;\n    display: flex;\n    background: var(--board-bg-color);\n    color: var(--main-text-color);\n    & ::v-deep > span {\n      margin-right: auto;\n      i {\n        color: var(--link-color);\n        font-size: 22px;\n      }\n    }\n  }\n  & ::v-deep .el-table {\n    height: calc(100vh - 300px) !important;\n  }\n  @media (max-width: 768px) {\n    .total-number {\n      height: 30px;\n      margin-bottom: 10px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n    min-height: calc(100vh - 90px);\n  }\n}\n</style>\n"]}]}